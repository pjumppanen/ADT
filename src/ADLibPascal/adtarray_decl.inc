// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_1B; const pRefArray : ARRAY_1B) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_1B) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_2B; const pRefArray : ARRAY_2B) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_2B) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_3B; const pRefArray : ARRAY_3B) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_3B) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_4B; const pRefArray : ARRAY_4B) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_4B) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_5B; const pRefArray : ARRAY_5B) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_5B) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_6B; const pRefArray : ARRAY_6B) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_6B) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_7B; const pRefArray : ARRAY_7B) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_7B) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_8B; const pRefArray : ARRAY_8B) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_8B) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_9B; const pRefArray : ARRAY_9B) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_9B) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_10B; const pRefArray : ARRAY_10B) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_10B) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_1LB; const pRefArray : ARRAY_1LB) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_1LB) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_2LB; const pRefArray : ARRAY_2LB) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_2LB) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_3LB; const pRefArray : ARRAY_3LB) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_3LB) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_4LB; const pRefArray : ARRAY_4LB) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_4LB) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_5LB; const pRefArray : ARRAY_5LB) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_5LB) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_6LB; const pRefArray : ARRAY_6LB) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_6LB) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_7LB; const pRefArray : ARRAY_7LB) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_7LB) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_8LB; const pRefArray : ARRAY_8LB) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_8LB) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_9LB; const pRefArray : ARRAY_9LB) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_9LB) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_10LB; const pRefArray : ARRAY_10LB) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_10LB) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_1C; const pRefArray : ARRAY_1C) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_1C) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_2C; const pRefArray : ARRAY_2C) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_2C) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_3C; const pRefArray : ARRAY_3C) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_3C) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_4C; const pRefArray : ARRAY_4C) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_4C) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_5C; const pRefArray : ARRAY_5C) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_5C) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_6C; const pRefArray : ARRAY_6C) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_6C) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_7C; const pRefArray : ARRAY_7C) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_7C) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_8C; const pRefArray : ARRAY_8C) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_8C) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_9C; const pRefArray : ARRAY_9C) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_9C) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_10C; const pRefArray : ARRAY_10C) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_10C) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_1UC; const pRefArray : ARRAY_1UC) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_1UC) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_2UC; const pRefArray : ARRAY_2UC) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_2UC) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_3UC; const pRefArray : ARRAY_3UC) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_3UC) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_4UC; const pRefArray : ARRAY_4UC) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_4UC) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_5UC; const pRefArray : ARRAY_5UC) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_5UC) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_6UC; const pRefArray : ARRAY_6UC) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_6UC) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_7UC; const pRefArray : ARRAY_7UC) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_7UC) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_8UC; const pRefArray : ARRAY_8UC) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_8UC) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_9UC; const pRefArray : ARRAY_9UC) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_9UC) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_10UC; const pRefArray : ARRAY_10UC) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_10UC) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_1I; const pRefArray : ARRAY_1I) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_1I) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_2I; const pRefArray : ARRAY_2I) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_2I) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_3I; const pRefArray : ARRAY_3I) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_3I) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_4I; const pRefArray : ARRAY_4I) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_4I) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_5I; const pRefArray : ARRAY_5I) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_5I) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_6I; const pRefArray : ARRAY_6I) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_6I) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_7I; const pRefArray : ARRAY_7I) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_7I) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_8I; const pRefArray : ARRAY_8I) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_8I) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_9I; const pRefArray : ARRAY_9I) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_9I) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_10I; const pRefArray : ARRAY_10I) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_10I) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_1S; const pRefArray : ARRAY_1S) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_1S) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_2S; const pRefArray : ARRAY_2S) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_2S) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_3S; const pRefArray : ARRAY_3S) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_3S) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_4S; const pRefArray : ARRAY_4S) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_4S) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_5S; const pRefArray : ARRAY_5S) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_5S) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_6S; const pRefArray : ARRAY_6S) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_6S) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_7S; const pRefArray : ARRAY_7S) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_7S) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_8S; const pRefArray : ARRAY_8S) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_8S) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_9S; const pRefArray : ARRAY_9S) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_9S) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_10S; const pRefArray : ARRAY_10S) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_10S) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_1US; const pRefArray : ARRAY_1US) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_1US) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_2US; const pRefArray : ARRAY_2US) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_2US) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_3US; const pRefArray : ARRAY_3US) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_3US) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_4US; const pRefArray : ARRAY_4US) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_4US) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_5US; const pRefArray : ARRAY_5US) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_5US) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_6US; const pRefArray : ARRAY_6US) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_6US) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_7US; const pRefArray : ARRAY_7US) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_7US) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_8US; const pRefArray : ARRAY_8US) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_8US) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_9US; const pRefArray : ARRAY_9US) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_9US) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_10US; const pRefArray : ARRAY_10US) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_10US) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_1L; const pRefArray : ARRAY_1L) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_1L) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_2L; const pRefArray : ARRAY_2L) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_2L) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_3L; const pRefArray : ARRAY_3L) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_3L) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_4L; const pRefArray : ARRAY_4L) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_4L) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_5L; const pRefArray : ARRAY_5L) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_5L) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_6L; const pRefArray : ARRAY_6L) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_6L) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_7L; const pRefArray : ARRAY_7L) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_7L) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_8L; const pRefArray : ARRAY_8L) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_8L) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_9L; const pRefArray : ARRAY_9L) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_9L) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_10L; const pRefArray : ARRAY_10L) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_10L) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_1UL; const pRefArray : ARRAY_1UL) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_1UL) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_2UL; const pRefArray : ARRAY_2UL) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_2UL) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_3UL; const pRefArray : ARRAY_3UL) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_3UL) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_4UL; const pRefArray : ARRAY_4UL) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_4UL) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_5UL; const pRefArray : ARRAY_5UL) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_5UL) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_6UL; const pRefArray : ARRAY_6UL) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_6UL) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_7UL; const pRefArray : ARRAY_7UL) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_7UL) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_8UL; const pRefArray : ARRAY_8UL) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_8UL) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_9UL; const pRefArray : ARRAY_9UL) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_9UL) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_10UL; const pRefArray : ARRAY_10UL) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_10UL) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_1F; const pRefArray : ARRAY_1F) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_1F) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_2F; const pRefArray : ARRAY_2F) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_2F) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_3F; const pRefArray : ARRAY_3F) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_3F) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_4F; const pRefArray : ARRAY_4F) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_4F) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_5F; const pRefArray : ARRAY_5F) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_5F) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_6F; const pRefArray : ARRAY_6F) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_6F) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_7F; const pRefArray : ARRAY_7F) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_7F) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_8F; const pRefArray : ARRAY_8F) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_8F) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_9F; const pRefArray : ARRAY_9F) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_9F) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_10F; const pRefArray : ARRAY_10F) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_10F) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_1D; const pRefArray : ARRAY_1D) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_1D) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_2D; const pRefArray : ARRAY_2D) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_2D) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_3D; const pRefArray : ARRAY_3D) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_3D) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_4D; const pRefArray : ARRAY_4D) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_4D) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_5D; const pRefArray : ARRAY_5D) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_5D) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_6D; const pRefArray : ARRAY_6D) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_6D) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_7D; const pRefArray : ARRAY_7D) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_7D) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_8D; const pRefArray : ARRAY_8D) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_8D) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_9D; const pRefArray : ARRAY_9D) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_9D) ; overload;
// Same shape array creation method
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator; var pArray : ARRAY_10D; const pRefArray : ARRAY_10D) : boolean ; overload;

// array destruction method
procedure AdtArrayPlan_destroy(var rAllocator : AdtMemAllocator; var pArray : ARRAY_10D) ; overload;
// Simplified array creation methods
// 1D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_1B;
                             nBaseIndex, nSize : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 2D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_2B;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 3D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_3B;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 4D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_4B;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 5D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_5B;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 6D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_6B;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 7D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_7B;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 8D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_8B;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 9D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_9B;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             nBaseIndex9, nSize9 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 10D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_10B;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             nBaseIndex9, nSize9 : longint;
                             nBaseIndex10, nSize10 : longint;
                             pExisting : pchar = nil) : boolean ; overload;
// Simplified array creation methods
// 1D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_1LB;
                             nBaseIndex, nSize : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 2D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_2LB;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 3D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_3LB;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 4D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_4LB;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 5D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_5LB;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 6D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_6LB;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 7D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_7LB;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 8D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_8LB;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 9D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_9LB;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             nBaseIndex9, nSize9 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 10D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_10LB;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             nBaseIndex9, nSize9 : longint;
                             nBaseIndex10, nSize10 : longint;
                             pExisting : pchar = nil) : boolean ; overload;
// Simplified array creation methods
// 1D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_1C;
                             nBaseIndex, nSize : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 2D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_2C;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 3D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_3C;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 4D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_4C;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 5D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_5C;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 6D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_6C;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 7D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_7C;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 8D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_8C;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 9D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_9C;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             nBaseIndex9, nSize9 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 10D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_10C;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             nBaseIndex9, nSize9 : longint;
                             nBaseIndex10, nSize10 : longint;
                             pExisting : pchar = nil) : boolean ; overload;
// Simplified array creation methods
// 1D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_1UC;
                             nBaseIndex, nSize : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 2D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_2UC;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 3D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_3UC;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 4D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_4UC;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 5D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_5UC;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 6D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_6UC;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 7D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_7UC;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 8D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_8UC;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 9D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_9UC;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             nBaseIndex9, nSize9 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 10D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_10UC;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             nBaseIndex9, nSize9 : longint;
                             nBaseIndex10, nSize10 : longint;
                             pExisting : pchar = nil) : boolean ; overload;
// Simplified array creation methods
// 1D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_1I;
                             nBaseIndex, nSize : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 2D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_2I;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 3D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_3I;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 4D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_4I;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 5D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_5I;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 6D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_6I;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 7D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_7I;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 8D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_8I;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 9D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_9I;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             nBaseIndex9, nSize9 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 10D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_10I;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             nBaseIndex9, nSize9 : longint;
                             nBaseIndex10, nSize10 : longint;
                             pExisting : pchar = nil) : boolean ; overload;
// Simplified array creation methods
// 1D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_1S;
                             nBaseIndex, nSize : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 2D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_2S;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 3D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_3S;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 4D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_4S;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 5D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_5S;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 6D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_6S;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 7D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_7S;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 8D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_8S;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 9D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_9S;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             nBaseIndex9, nSize9 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 10D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_10S;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             nBaseIndex9, nSize9 : longint;
                             nBaseIndex10, nSize10 : longint;
                             pExisting : pchar = nil) : boolean ; overload;
// Simplified array creation methods
// 1D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_1US;
                             nBaseIndex, nSize : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 2D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_2US;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 3D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_3US;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 4D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_4US;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 5D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_5US;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 6D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_6US;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 7D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_7US;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 8D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_8US;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 9D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_9US;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             nBaseIndex9, nSize9 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 10D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_10US;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             nBaseIndex9, nSize9 : longint;
                             nBaseIndex10, nSize10 : longint;
                             pExisting : pchar = nil) : boolean ; overload;
// Simplified array creation methods
// 1D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_1L;
                             nBaseIndex, nSize : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 2D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_2L;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 3D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_3L;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 4D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_4L;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 5D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_5L;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 6D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_6L;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 7D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_7L;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 8D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_8L;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 9D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_9L;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             nBaseIndex9, nSize9 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 10D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_10L;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             nBaseIndex9, nSize9 : longint;
                             nBaseIndex10, nSize10 : longint;
                             pExisting : pchar = nil) : boolean ; overload;
// Simplified array creation methods
// 1D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_1UL;
                             nBaseIndex, nSize : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 2D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_2UL;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 3D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_3UL;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 4D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_4UL;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 5D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_5UL;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 6D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_6UL;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 7D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_7UL;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 8D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_8UL;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 9D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_9UL;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             nBaseIndex9, nSize9 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 10D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_10UL;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             nBaseIndex9, nSize9 : longint;
                             nBaseIndex10, nSize10 : longint;
                             pExisting : pchar = nil) : boolean ; overload;
// Simplified array creation methods
// 1D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_1F;
                             nBaseIndex, nSize : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 2D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_2F;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 3D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_3F;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 4D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_4F;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 5D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_5F;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 6D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_6F;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 7D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_7F;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 8D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_8F;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 9D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_9F;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             nBaseIndex9, nSize9 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 10D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_10F;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             nBaseIndex9, nSize9 : longint;
                             nBaseIndex10, nSize10 : longint;
                             pExisting : pchar = nil) : boolean ; overload;
// Simplified array creation methods
// 1D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_1D;
                             nBaseIndex, nSize : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 2D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_2D;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 3D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_3D;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 4D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_4D;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 5D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_5D;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 6D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_6D;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 7D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_7D;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 8D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_8D;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 9D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_9D;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             nBaseIndex9, nSize9 : longint;
                             pExisting : pchar = nil) : boolean ; overload;

// 10D
function AdtArrayPlan_create(var rAllocator : AdtMemAllocator;
                             var pArray : ARRAY_10D;
                             nBaseIndex1, nSize1 : longint;
                             nBaseIndex2, nSize2 : longint;
                             nBaseIndex3, nSize3 : longint;
                             nBaseIndex4, nSize4 : longint;
                             nBaseIndex5, nSize5 : longint;
                             nBaseIndex6, nSize6 : longint;
                             nBaseIndex7, nSize7 : longint;
                             nBaseIndex8, nSize8 : longint;
                             nBaseIndex9, nSize9 : longint;
                             nBaseIndex10, nSize10 : longint;
                             pExisting : pchar = nil) : boolean ; overload;
procedure zero(var rArrayOriginValue : boolean; nCount : longint) ; overload;

procedure xcopy(var rSrcArrayOriginValue : boolean; var rDestArrayOriginValue : boolean; nCount : longint) ; overload;

procedure zero(var rArrayOriginValue : longbool; nCount : longint) ; overload;

procedure xcopy(var rSrcArrayOriginValue : longbool; var rDestArrayOriginValue : longbool; nCount : longint) ; overload;

procedure zero(var rArrayOriginValue : shortint; nCount : longint) ; overload;

procedure xcopy(var rSrcArrayOriginValue : shortint; var rDestArrayOriginValue : shortint; nCount : longint) ; overload;

procedure zero(var rArrayOriginValue : byte; nCount : longint) ; overload;

procedure xcopy(var rSrcArrayOriginValue : byte; var rDestArrayOriginValue : byte; nCount : longint) ; overload;

procedure zero(var rArrayOriginValue : smallint; nCount : longint) ; overload;

procedure xcopy(var rSrcArrayOriginValue : smallint; var rDestArrayOriginValue : smallint; nCount : longint) ; overload;

procedure zero(var rArrayOriginValue : word; nCount : longint) ; overload;

procedure xcopy(var rSrcArrayOriginValue : word; var rDestArrayOriginValue : word; nCount : longint) ; overload;

procedure zero(var rArrayOriginValue : longint; nCount : longint) ; overload;

procedure xcopy(var rSrcArrayOriginValue : longint; var rDestArrayOriginValue : longint; nCount : longint) ; overload;

procedure zero(var rArrayOriginValue : longword; nCount : longint) ; overload;

procedure xcopy(var rSrcArrayOriginValue : longword; var rDestArrayOriginValue : longword; nCount : longint) ; overload;

procedure zero(var rArrayOriginValue : single; nCount : longint) ; overload;

procedure xcopy(var rSrcArrayOriginValue : single; var rDestArrayOriginValue : single; nCount : longint) ; overload;

procedure zero(var rArrayOriginValue : double; nCount : longint) ; overload;

procedure xcopy(var rSrcArrayOriginValue : double; var rDestArrayOriginValue : double; nCount : longint) ; overload;

