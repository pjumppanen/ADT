procedure AdtArrays.set_all(pArray : ARRAY_1B; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1B) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1B) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2B; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2B) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2B) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3B; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3B) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3B) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4B; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4B) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4B) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5B; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5B) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5B) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6B; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6B) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6B) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7B; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7B) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7B) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8B; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8B) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8B) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9B; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9B) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9B) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10B; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10B) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10B) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10B; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1C; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2C; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3C; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4C; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5C; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6C; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7C; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8C; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9C; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10C; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10C; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1UC; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2UC; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3UC; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4UC; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5UC; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6UC; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7UC; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8UC; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9UC; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10UC; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10UC; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1I; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2I; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3I; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4I; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5I; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6I; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7I; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8I; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9I; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10I; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10I; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1S; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2S; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3S; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4S; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5S; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6S; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7S; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8S; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9S; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10S; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10S; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1US; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2US; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3US; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4US; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5US; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6US; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7US; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8US; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9US; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10US; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10US; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1L; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2L; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3L; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4L; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5L; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6L; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7L; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8L; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9L; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10L; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10L; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1UL; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2UL; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3UL; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4UL; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5UL; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6UL; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7UL; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8UL; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9UL; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10UL; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10UL; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1F; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2F; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3F; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4F; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5F; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6F; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7F; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8F; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9F; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10F; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10F; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1D; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2D; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3D; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4D; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5D; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6D; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7D; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8D; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9D; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10D; to : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10D; by : boolean) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pboolean;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pboolean(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(boolean);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1C; to : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2C; to : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3C; to : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4C; to : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5C; to : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6C; to : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7C; to : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8C; to : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9C; to : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10C; to : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1UC; to : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2UC; to : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3UC; to : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4UC; to : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5UC; to : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6UC; to : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7UC; to : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8UC; to : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9UC; to : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10UC; to : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1I; to : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2I; to : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3I; to : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4I; to : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5I; to : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6I; to : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7I; to : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8I; to : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9I; to : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10I; to : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1S; to : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2S; to : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3S; to : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4S; to : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5S; to : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6S; to : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7S; to : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8S; to : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9S; to : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10S; to : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1US; to : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2US; to : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3US; to : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4US; to : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5US; to : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6US; to : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7US; to : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8US; to : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9US; to : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10US; to : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1L; to : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2L; to : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3L; to : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4L; to : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5L; to : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6L; to : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7L; to : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8L; to : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9L; to : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10L; to : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1UL; to : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2UL; to : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3UL; to : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4UL; to : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5UL; to : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6UL; to : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7UL; to : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8UL; to : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9UL; to : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10UL; to : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1F; to : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2F; to : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3F; to : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4F; to : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5F; to : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6F; to : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7F; to : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8F; to : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9F; to : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10F; to : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1D; to : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2D; to : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3D; to : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4D; to : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5D; to : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6D; to : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7D; to : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8D; to : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9D; to : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10D; to : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1C; to : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2C; to : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3C; to : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4C; to : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5C; to : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6C; to : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7C; to : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8C; to : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9C; to : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10C; to : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10C; by : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1UC; to : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2UC; to : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3UC; to : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4UC; to : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5UC; to : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6UC; to : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7UC; to : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8UC; to : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9UC; to : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10UC; to : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10UC; by : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1I; to : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2I; to : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3I; to : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4I; to : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5I; to : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6I; to : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7I; to : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8I; to : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9I; to : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10I; to : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10I; by : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1S; to : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2S; to : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3S; to : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4S; to : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5S; to : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6S; to : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7S; to : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8S; to : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9S; to : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10S; to : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10S; by : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1US; to : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2US; to : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3US; to : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4US; to : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5US; to : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6US; to : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7US; to : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8US; to : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9US; to : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10US; to : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10US; by : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1L; to : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2L; to : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3L; to : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4L; to : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5L; to : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6L; to : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7L; to : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8L; to : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9L; to : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10L; to : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10L; by : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1UL; to : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2UL; to : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3UL; to : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4UL; to : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5UL; to : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6UL; to : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7UL; to : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8UL; to : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9UL; to : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10UL; to : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10UL; by : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1F; to : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2F; to : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3F; to : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4F; to : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5F; to : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6F; to : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7F; to : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8F; to : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9F; to : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10F; to : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10F; by : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1D; to : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2D; to : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3D; to : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4D; to : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5D; to : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6D; to : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7D; to : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8D; to : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9D; to : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10D; to : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := to;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + by;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - by;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * by;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10D; by : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / by;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10C) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10C; value : shortint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pshortint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pshortint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(shortint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10UC) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10UC; value : byte) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pbyte;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pbyte(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(byte);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10I) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10I; value : integer) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pinteger;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pinteger(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(integer);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10S) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10S; value : smallint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psmallint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psmallint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(smallint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10US) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10US; value : word) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(word);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10L) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10L; value : longint) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongint;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongint(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longint);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10UL) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10UL; value : longword) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : plongword;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := plongword(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(longword);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10F) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10F; value : single) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : psingle;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := psingle(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(single);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_1D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_1D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_1D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_1D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_1D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_1D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_1D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_2D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_2D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_2D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_2D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_2D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_2D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_2D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_3D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_3D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_3D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_3D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_3D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_3D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_3D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_4D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_4D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_4D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_4D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_4D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_4D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_4D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_5D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_5D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_5D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_5D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_5D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_5D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_5D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_6D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_6D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_6D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_6D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_6D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_6D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_6D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_7D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_7D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_7D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_7D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_7D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_7D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_7D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_8D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_8D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_8D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_8D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_8D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_8D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_8D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_9D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_9D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_9D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_9D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_9D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_9D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_9D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

procedure AdtArrays.set_all(pArray : ARRAY_10D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := value;
  end;
end;

procedure AdtArrays.inc(pArray : ARRAY_10D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + 1;
  end;
end;

procedure AdtArrays.dec(pArray : ARRAY_10D) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - 1;
  end;
end;

procedure AdtArrays.incby(pArray : ARRAY_10D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] + value;
  end;
end;

procedure AdtArrays.decby(pArray : ARRAY_10D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] - value;
  end;
end;

procedure AdtArrays.mulby(pArray : ARRAY_10D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] * value;
  end;
end;

procedure AdtArrays.divby(pArray : ARRAY_10D; value : double) ; overload;

var
  pArrayInfo  : PAdtArrayInfo;
  pData       : pdouble;
  nCount      : longint;
  cn          : longint;

begin
  pArrayInfo  := AdtArrayPlanActor_arrayInfo(_MemAllocator, pchar(pArray));
  pData       := pdouble(pArrayInfo^.firstData());
  nCount      := pArrayInfo^.lengthOfData() / sizeof(double);

  for cn := 0 to nCount - 1 do
  begin
    pData[cn] := pData[cn] / value;
  end;
end;

