// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_1B) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_1B) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_1B ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_1B ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_1B) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_1B) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_1B; pRefArray : ARRAY_1B) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_1B) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_2B) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_2B) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_2B ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_2B ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_2B) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_2B) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_2B; pRefArray : ARRAY_2B) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_2B) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_3B) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_3B) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_3B ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_3B ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_3B) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_3B) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_3B; pRefArray : ARRAY_3B) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_3B) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_4B) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_4B) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_4B ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_4B ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_4B) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_4B) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_4B; pRefArray : ARRAY_4B) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_4B) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_5B) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_5B) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_5B ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_5B ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_5B) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_5B) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_5B; pRefArray : ARRAY_5B) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_5B) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_6B) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_6B) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_6B ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_6B ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_6B) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_6B) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_6B; pRefArray : ARRAY_6B) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_6B) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_7B) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_7B) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_7B ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_7B ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_7B) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_7B) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_7B; pRefArray : ARRAY_7B) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_7B) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_8B) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_8B) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_8B ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_8B ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_8B) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_8B) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_8B; pRefArray : ARRAY_8B) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_8B) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_9B) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_9B) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_9B ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_9B ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_9B) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_9B) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_9B; pRefArray : ARRAY_9B) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_9B) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_10B) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_10B) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_10B ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_10B ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_10B) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_10B) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_10B; pRefArray : ARRAY_10B) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_10B) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_1C) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_1C) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_1C ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_1C ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_1C) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_1C) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_1C; pRefArray : ARRAY_1C) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_1C) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_2C) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_2C) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_2C ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_2C ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_2C) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_2C) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_2C; pRefArray : ARRAY_2C) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_2C) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_3C) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_3C) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_3C ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_3C ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_3C) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_3C) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_3C; pRefArray : ARRAY_3C) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_3C) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_4C) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_4C) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_4C ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_4C ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_4C) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_4C) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_4C; pRefArray : ARRAY_4C) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_4C) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_5C) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_5C) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_5C ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_5C ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_5C) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_5C) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_5C; pRefArray : ARRAY_5C) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_5C) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_6C) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_6C) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_6C ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_6C ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_6C) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_6C) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_6C; pRefArray : ARRAY_6C) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_6C) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_7C) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_7C) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_7C ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_7C ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_7C) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_7C) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_7C; pRefArray : ARRAY_7C) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_7C) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_8C) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_8C) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_8C ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_8C ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_8C) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_8C) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_8C; pRefArray : ARRAY_8C) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_8C) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_9C) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_9C) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_9C ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_9C ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_9C) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_9C) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_9C; pRefArray : ARRAY_9C) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_9C) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_10C) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_10C) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_10C ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_10C ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_10C) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_10C) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_10C; pRefArray : ARRAY_10C) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_10C) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_1UC) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_1UC) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_1UC ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_1UC ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_1UC) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_1UC) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_1UC; pRefArray : ARRAY_1UC) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_1UC) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_2UC) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_2UC) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_2UC ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_2UC ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_2UC) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_2UC) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_2UC; pRefArray : ARRAY_2UC) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_2UC) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_3UC) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_3UC) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_3UC ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_3UC ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_3UC) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_3UC) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_3UC; pRefArray : ARRAY_3UC) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_3UC) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_4UC) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_4UC) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_4UC ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_4UC ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_4UC) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_4UC) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_4UC; pRefArray : ARRAY_4UC) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_4UC) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_5UC) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_5UC) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_5UC ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_5UC ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_5UC) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_5UC) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_5UC; pRefArray : ARRAY_5UC) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_5UC) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_6UC) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_6UC) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_6UC ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_6UC ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_6UC) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_6UC) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_6UC; pRefArray : ARRAY_6UC) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_6UC) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_7UC) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_7UC) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_7UC ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_7UC ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_7UC) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_7UC) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_7UC; pRefArray : ARRAY_7UC) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_7UC) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_8UC) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_8UC) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_8UC ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_8UC ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_8UC) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_8UC) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_8UC; pRefArray : ARRAY_8UC) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_8UC) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_9UC) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_9UC) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_9UC ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_9UC ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_9UC) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_9UC) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_9UC; pRefArray : ARRAY_9UC) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_9UC) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_10UC) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_10UC) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_10UC ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_10UC ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_10UC) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_10UC) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_10UC; pRefArray : ARRAY_10UC) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_10UC) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_1I) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_1I) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_1I ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_1I ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_1I) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_1I) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_1I; pRefArray : ARRAY_1I) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_1I) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_2I) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_2I) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_2I ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_2I ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_2I) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_2I) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_2I; pRefArray : ARRAY_2I) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_2I) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_3I) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_3I) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_3I ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_3I ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_3I) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_3I) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_3I; pRefArray : ARRAY_3I) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_3I) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_4I) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_4I) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_4I ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_4I ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_4I) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_4I) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_4I; pRefArray : ARRAY_4I) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_4I) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_5I) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_5I) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_5I ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_5I ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_5I) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_5I) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_5I; pRefArray : ARRAY_5I) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_5I) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_6I) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_6I) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_6I ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_6I ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_6I) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_6I) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_6I; pRefArray : ARRAY_6I) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_6I) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_7I) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_7I) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_7I ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_7I ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_7I) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_7I) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_7I; pRefArray : ARRAY_7I) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_7I) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_8I) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_8I) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_8I ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_8I ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_8I) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_8I) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_8I; pRefArray : ARRAY_8I) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_8I) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_9I) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_9I) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_9I ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_9I ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_9I) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_9I) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_9I; pRefArray : ARRAY_9I) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_9I) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_10I) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_10I) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_10I ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_10I ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_10I) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_10I) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_10I; pRefArray : ARRAY_10I) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_10I) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_1S) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_1S) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_1S ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_1S ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_1S) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_1S) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_1S; pRefArray : ARRAY_1S) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_1S) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_2S) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_2S) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_2S ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_2S ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_2S) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_2S) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_2S; pRefArray : ARRAY_2S) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_2S) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_3S) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_3S) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_3S ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_3S ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_3S) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_3S) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_3S; pRefArray : ARRAY_3S) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_3S) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_4S) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_4S) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_4S ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_4S ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_4S) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_4S) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_4S; pRefArray : ARRAY_4S) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_4S) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_5S) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_5S) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_5S ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_5S ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_5S) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_5S) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_5S; pRefArray : ARRAY_5S) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_5S) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_6S) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_6S) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_6S ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_6S ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_6S) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_6S) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_6S; pRefArray : ARRAY_6S) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_6S) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_7S) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_7S) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_7S ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_7S ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_7S) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_7S) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_7S; pRefArray : ARRAY_7S) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_7S) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_8S) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_8S) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_8S ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_8S ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_8S) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_8S) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_8S; pRefArray : ARRAY_8S) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_8S) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_9S) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_9S) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_9S ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_9S ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_9S) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_9S) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_9S; pRefArray : ARRAY_9S) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_9S) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_10S) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_10S) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_10S ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_10S ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_10S) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_10S) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_10S; pRefArray : ARRAY_10S) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_10S) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_1US) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_1US) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_1US ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_1US ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_1US) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_1US) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_1US; pRefArray : ARRAY_1US) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_1US) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_2US) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_2US) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_2US ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_2US ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_2US) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_2US) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_2US; pRefArray : ARRAY_2US) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_2US) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_3US) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_3US) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_3US ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_3US ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_3US) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_3US) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_3US; pRefArray : ARRAY_3US) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_3US) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_4US) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_4US) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_4US ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_4US ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_4US) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_4US) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_4US; pRefArray : ARRAY_4US) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_4US) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_5US) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_5US) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_5US ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_5US ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_5US) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_5US) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_5US; pRefArray : ARRAY_5US) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_5US) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_6US) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_6US) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_6US ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_6US ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_6US) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_6US) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_6US; pRefArray : ARRAY_6US) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_6US) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_7US) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_7US) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_7US ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_7US ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_7US) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_7US) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_7US; pRefArray : ARRAY_7US) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_7US) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_8US) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_8US) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_8US ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_8US ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_8US) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_8US) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_8US; pRefArray : ARRAY_8US) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_8US) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_9US) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_9US) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_9US ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_9US ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_9US) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_9US) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_9US; pRefArray : ARRAY_9US) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_9US) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_10US) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_10US) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_10US ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_10US ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_10US) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_10US) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_10US; pRefArray : ARRAY_10US) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_10US) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_1L) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_1L) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_1L ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_1L ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_1L) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_1L) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_1L; pRefArray : ARRAY_1L) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_1L) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_2L) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_2L) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_2L ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_2L ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_2L) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_2L) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_2L; pRefArray : ARRAY_2L) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_2L) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_3L) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_3L) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_3L ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_3L ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_3L) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_3L) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_3L; pRefArray : ARRAY_3L) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_3L) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_4L) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_4L) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_4L ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_4L ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_4L) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_4L) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_4L; pRefArray : ARRAY_4L) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_4L) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_5L) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_5L) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_5L ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_5L ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_5L) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_5L) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_5L; pRefArray : ARRAY_5L) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_5L) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_6L) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_6L) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_6L ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_6L ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_6L) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_6L) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_6L; pRefArray : ARRAY_6L) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_6L) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_7L) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_7L) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_7L ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_7L ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_7L) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_7L) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_7L; pRefArray : ARRAY_7L) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_7L) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_8L) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_8L) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_8L ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_8L ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_8L) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_8L) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_8L; pRefArray : ARRAY_8L) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_8L) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_9L) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_9L) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_9L ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_9L ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_9L) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_9L) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_9L; pRefArray : ARRAY_9L) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_9L) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_10L) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_10L) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_10L ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_10L ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_10L) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_10L) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_10L; pRefArray : ARRAY_10L) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_10L) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_1UL) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_1UL) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_1UL ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_1UL ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_1UL) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_1UL) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_1UL; pRefArray : ARRAY_1UL) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_1UL) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_2UL) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_2UL) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_2UL ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_2UL ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_2UL) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_2UL) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_2UL; pRefArray : ARRAY_2UL) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_2UL) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_3UL) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_3UL) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_3UL ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_3UL ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_3UL) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_3UL) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_3UL; pRefArray : ARRAY_3UL) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_3UL) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_4UL) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_4UL) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_4UL ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_4UL ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_4UL) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_4UL) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_4UL; pRefArray : ARRAY_4UL) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_4UL) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_5UL) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_5UL) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_5UL ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_5UL ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_5UL) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_5UL) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_5UL; pRefArray : ARRAY_5UL) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_5UL) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_6UL) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_6UL) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_6UL ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_6UL ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_6UL) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_6UL) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_6UL; pRefArray : ARRAY_6UL) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_6UL) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_7UL) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_7UL) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_7UL ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_7UL ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_7UL) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_7UL) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_7UL; pRefArray : ARRAY_7UL) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_7UL) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_8UL) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_8UL) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_8UL ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_8UL ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_8UL) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_8UL) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_8UL; pRefArray : ARRAY_8UL) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_8UL) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_9UL) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_9UL) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_9UL ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_9UL ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_9UL) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_9UL) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_9UL; pRefArray : ARRAY_9UL) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_9UL) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_10UL) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_10UL) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_10UL ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_10UL ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_10UL) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_10UL) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_10UL; pRefArray : ARRAY_10UL) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_10UL) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_1F) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_1F) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_1F ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_1F ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_1F) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_1F) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_1F; pRefArray : ARRAY_1F) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_1F) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_2F) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_2F) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_2F ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_2F ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_2F) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_2F) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_2F; pRefArray : ARRAY_2F) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_2F) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_3F) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_3F) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_3F ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_3F ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_3F) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_3F) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_3F; pRefArray : ARRAY_3F) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_3F) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_4F) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_4F) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_4F ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_4F ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_4F) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_4F) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_4F; pRefArray : ARRAY_4F) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_4F) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_5F) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_5F) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_5F ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_5F ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_5F) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_5F) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_5F; pRefArray : ARRAY_5F) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_5F) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_6F) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_6F) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_6F ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_6F ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_6F) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_6F) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_6F; pRefArray : ARRAY_6F) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_6F) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_7F) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_7F) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_7F ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_7F ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_7F) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_7F) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_7F; pRefArray : ARRAY_7F) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_7F) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_8F) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_8F) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_8F ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_8F ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_8F) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_8F) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_8F; pRefArray : ARRAY_8F) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_8F) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_9F) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_9F) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_9F ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_9F ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_9F) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_9F) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_9F; pRefArray : ARRAY_9F) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_9F) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_10F) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_10F) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_10F ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_10F ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_10F) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_10F) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_10F; pRefArray : ARRAY_10F) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_10F) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_1D) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_1D) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_1D ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_1D ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_1D) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_1D) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_1D; pRefArray : ARRAY_1D) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_1D) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_2D) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_2D) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_2D ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_2D ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_2D) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_2D) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_2D; pRefArray : ARRAY_2D) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_2D) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_3D) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_3D) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_3D ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_3D ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_3D) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_3D) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_3D; pRefArray : ARRAY_3D) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_3D) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_4D) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_4D) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_4D ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_4D ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_4D) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_4D) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_4D; pRefArray : ARRAY_4D) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_4D) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_5D) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_5D) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_5D ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_5D ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_5D) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_5D) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_5D; pRefArray : ARRAY_5D) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_5D) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_6D) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_6D) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_6D ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_6D ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_6D) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_6D) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_6D; pRefArray : ARRAY_6D) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_6D) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_7D) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_7D) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_7D ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_7D ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_7D) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_7D) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_7D; pRefArray : ARRAY_7D) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_7D) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_8D) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_8D) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_8D ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_8D ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_8D) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_8D) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_8D; pRefArray : ARRAY_8D) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_8D) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_9D) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_9D) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_9D ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_9D ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_9D) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_9D) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_9D; pRefArray : ARRAY_9D) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_9D) ; overload;

// R_to_ADlib methods
procedure R_to_ADlib(pArraySrc : plongint ; pArrayDest : ARRAY_10D) ; overload;

procedure R_to_ADlib(pArraySrc : pdouble ; pArrayDest : ARRAY_10D) ; overload;

// ADlib_to_R methods
procedure ADlib_to_R(pArraySrc : ARRAY_10D ; pArrayDest : plongint) ; overload;

procedure ADlib_to_R(pArraySrc : ARRAY_10D ; pArrayDest : pdouble) ; overload;

// zero methods
procedure zero(pArray : ARRAY_10D) ; overload;

// xcopy methods
procedure xcopy(pArraySrc, pArrayDest : ARRAY_10D) ; overload;

// Same shape array creation method - copying shape from existing array
function create(var pArray : ARRAY_10D; pRefArray : ARRAY_10D) : boolean ; overload;

// array destruction method
procedure destroy(var pArray : ARRAY_10D) ; overload;

procedure set_all(pArray : ARRAY_1C; value : shortint) ; overload;

procedure inc(pArray : ARRAY_1C) ; overload;

procedure dec(pArray : ARRAY_1C) ; overload;

procedure incby(pArray : ARRAY_1C; value : shortint) ; overload;

procedure decby(pArray : ARRAY_1C; value : shortint) ; overload;
procedure set_all(pArray : ARRAY_2C; value : shortint) ; overload;

procedure inc(pArray : ARRAY_2C) ; overload;

procedure dec(pArray : ARRAY_2C) ; overload;

procedure incby(pArray : ARRAY_2C; value : shortint) ; overload;

procedure decby(pArray : ARRAY_2C; value : shortint) ; overload;
procedure set_all(pArray : ARRAY_3C; value : shortint) ; overload;

procedure inc(pArray : ARRAY_3C) ; overload;

procedure dec(pArray : ARRAY_3C) ; overload;

procedure incby(pArray : ARRAY_3C; value : shortint) ; overload;

procedure decby(pArray : ARRAY_3C; value : shortint) ; overload;
procedure set_all(pArray : ARRAY_4C; value : shortint) ; overload;

procedure inc(pArray : ARRAY_4C) ; overload;

procedure dec(pArray : ARRAY_4C) ; overload;

procedure incby(pArray : ARRAY_4C; value : shortint) ; overload;

procedure decby(pArray : ARRAY_4C; value : shortint) ; overload;
procedure set_all(pArray : ARRAY_5C; value : shortint) ; overload;

procedure inc(pArray : ARRAY_5C) ; overload;

procedure dec(pArray : ARRAY_5C) ; overload;

procedure incby(pArray : ARRAY_5C; value : shortint) ; overload;

procedure decby(pArray : ARRAY_5C; value : shortint) ; overload;
procedure set_all(pArray : ARRAY_6C; value : shortint) ; overload;

procedure inc(pArray : ARRAY_6C) ; overload;

procedure dec(pArray : ARRAY_6C) ; overload;

procedure incby(pArray : ARRAY_6C; value : shortint) ; overload;

procedure decby(pArray : ARRAY_6C; value : shortint) ; overload;
procedure set_all(pArray : ARRAY_7C; value : shortint) ; overload;

procedure inc(pArray : ARRAY_7C) ; overload;

procedure dec(pArray : ARRAY_7C) ; overload;

procedure incby(pArray : ARRAY_7C; value : shortint) ; overload;

procedure decby(pArray : ARRAY_7C; value : shortint) ; overload;
procedure set_all(pArray : ARRAY_8C; value : shortint) ; overload;

procedure inc(pArray : ARRAY_8C) ; overload;

procedure dec(pArray : ARRAY_8C) ; overload;

procedure incby(pArray : ARRAY_8C; value : shortint) ; overload;

procedure decby(pArray : ARRAY_8C; value : shortint) ; overload;
procedure set_all(pArray : ARRAY_9C; value : shortint) ; overload;

procedure inc(pArray : ARRAY_9C) ; overload;

procedure dec(pArray : ARRAY_9C) ; overload;

procedure incby(pArray : ARRAY_9C; value : shortint) ; overload;

procedure decby(pArray : ARRAY_9C; value : shortint) ; overload;
procedure set_all(pArray : ARRAY_10C; value : shortint) ; overload;

procedure inc(pArray : ARRAY_10C) ; overload;

procedure dec(pArray : ARRAY_10C) ; overload;

procedure incby(pArray : ARRAY_10C; value : shortint) ; overload;

procedure decby(pArray : ARRAY_10C; value : shortint) ; overload;
procedure set_all(pArray : ARRAY_1UC; value : byte) ; overload;

procedure inc(pArray : ARRAY_1UC) ; overload;

procedure dec(pArray : ARRAY_1UC) ; overload;

procedure incby(pArray : ARRAY_1UC; value : byte) ; overload;

procedure decby(pArray : ARRAY_1UC; value : byte) ; overload;
procedure set_all(pArray : ARRAY_2UC; value : byte) ; overload;

procedure inc(pArray : ARRAY_2UC) ; overload;

procedure dec(pArray : ARRAY_2UC) ; overload;

procedure incby(pArray : ARRAY_2UC; value : byte) ; overload;

procedure decby(pArray : ARRAY_2UC; value : byte) ; overload;
procedure set_all(pArray : ARRAY_3UC; value : byte) ; overload;

procedure inc(pArray : ARRAY_3UC) ; overload;

procedure dec(pArray : ARRAY_3UC) ; overload;

procedure incby(pArray : ARRAY_3UC; value : byte) ; overload;

procedure decby(pArray : ARRAY_3UC; value : byte) ; overload;
procedure set_all(pArray : ARRAY_4UC; value : byte) ; overload;

procedure inc(pArray : ARRAY_4UC) ; overload;

procedure dec(pArray : ARRAY_4UC) ; overload;

procedure incby(pArray : ARRAY_4UC; value : byte) ; overload;

procedure decby(pArray : ARRAY_4UC; value : byte) ; overload;
procedure set_all(pArray : ARRAY_5UC; value : byte) ; overload;

procedure inc(pArray : ARRAY_5UC) ; overload;

procedure dec(pArray : ARRAY_5UC) ; overload;

procedure incby(pArray : ARRAY_5UC; value : byte) ; overload;

procedure decby(pArray : ARRAY_5UC; value : byte) ; overload;
procedure set_all(pArray : ARRAY_6UC; value : byte) ; overload;

procedure inc(pArray : ARRAY_6UC) ; overload;

procedure dec(pArray : ARRAY_6UC) ; overload;

procedure incby(pArray : ARRAY_6UC; value : byte) ; overload;

procedure decby(pArray : ARRAY_6UC; value : byte) ; overload;
procedure set_all(pArray : ARRAY_7UC; value : byte) ; overload;

procedure inc(pArray : ARRAY_7UC) ; overload;

procedure dec(pArray : ARRAY_7UC) ; overload;

procedure incby(pArray : ARRAY_7UC; value : byte) ; overload;

procedure decby(pArray : ARRAY_7UC; value : byte) ; overload;
procedure set_all(pArray : ARRAY_8UC; value : byte) ; overload;

procedure inc(pArray : ARRAY_8UC) ; overload;

procedure dec(pArray : ARRAY_8UC) ; overload;

procedure incby(pArray : ARRAY_8UC; value : byte) ; overload;

procedure decby(pArray : ARRAY_8UC; value : byte) ; overload;
procedure set_all(pArray : ARRAY_9UC; value : byte) ; overload;

procedure inc(pArray : ARRAY_9UC) ; overload;

procedure dec(pArray : ARRAY_9UC) ; overload;

procedure incby(pArray : ARRAY_9UC; value : byte) ; overload;

procedure decby(pArray : ARRAY_9UC; value : byte) ; overload;
procedure set_all(pArray : ARRAY_10UC; value : byte) ; overload;

procedure inc(pArray : ARRAY_10UC) ; overload;

procedure dec(pArray : ARRAY_10UC) ; overload;

procedure incby(pArray : ARRAY_10UC; value : byte) ; overload;

procedure decby(pArray : ARRAY_10UC; value : byte) ; overload;
procedure set_all(pArray : ARRAY_1I; value : integer) ; overload;

procedure inc(pArray : ARRAY_1I) ; overload;

procedure dec(pArray : ARRAY_1I) ; overload;

procedure incby(pArray : ARRAY_1I; value : integer) ; overload;

procedure decby(pArray : ARRAY_1I; value : integer) ; overload;
procedure set_all(pArray : ARRAY_2I; value : integer) ; overload;

procedure inc(pArray : ARRAY_2I) ; overload;

procedure dec(pArray : ARRAY_2I) ; overload;

procedure incby(pArray : ARRAY_2I; value : integer) ; overload;

procedure decby(pArray : ARRAY_2I; value : integer) ; overload;
procedure set_all(pArray : ARRAY_3I; value : integer) ; overload;

procedure inc(pArray : ARRAY_3I) ; overload;

procedure dec(pArray : ARRAY_3I) ; overload;

procedure incby(pArray : ARRAY_3I; value : integer) ; overload;

procedure decby(pArray : ARRAY_3I; value : integer) ; overload;
procedure set_all(pArray : ARRAY_4I; value : integer) ; overload;

procedure inc(pArray : ARRAY_4I) ; overload;

procedure dec(pArray : ARRAY_4I) ; overload;

procedure incby(pArray : ARRAY_4I; value : integer) ; overload;

procedure decby(pArray : ARRAY_4I; value : integer) ; overload;
procedure set_all(pArray : ARRAY_5I; value : integer) ; overload;

procedure inc(pArray : ARRAY_5I) ; overload;

procedure dec(pArray : ARRAY_5I) ; overload;

procedure incby(pArray : ARRAY_5I; value : integer) ; overload;

procedure decby(pArray : ARRAY_5I; value : integer) ; overload;
procedure set_all(pArray : ARRAY_6I; value : integer) ; overload;

procedure inc(pArray : ARRAY_6I) ; overload;

procedure dec(pArray : ARRAY_6I) ; overload;

procedure incby(pArray : ARRAY_6I; value : integer) ; overload;

procedure decby(pArray : ARRAY_6I; value : integer) ; overload;
procedure set_all(pArray : ARRAY_7I; value : integer) ; overload;

procedure inc(pArray : ARRAY_7I) ; overload;

procedure dec(pArray : ARRAY_7I) ; overload;

procedure incby(pArray : ARRAY_7I; value : integer) ; overload;

procedure decby(pArray : ARRAY_7I; value : integer) ; overload;
procedure set_all(pArray : ARRAY_8I; value : integer) ; overload;

procedure inc(pArray : ARRAY_8I) ; overload;

procedure dec(pArray : ARRAY_8I) ; overload;

procedure incby(pArray : ARRAY_8I; value : integer) ; overload;

procedure decby(pArray : ARRAY_8I; value : integer) ; overload;
procedure set_all(pArray : ARRAY_9I; value : integer) ; overload;

procedure inc(pArray : ARRAY_9I) ; overload;

procedure dec(pArray : ARRAY_9I) ; overload;

procedure incby(pArray : ARRAY_9I; value : integer) ; overload;

procedure decby(pArray : ARRAY_9I; value : integer) ; overload;
procedure set_all(pArray : ARRAY_10I; value : integer) ; overload;

procedure inc(pArray : ARRAY_10I) ; overload;

procedure dec(pArray : ARRAY_10I) ; overload;

procedure incby(pArray : ARRAY_10I; value : integer) ; overload;

procedure decby(pArray : ARRAY_10I; value : integer) ; overload;
procedure set_all(pArray : ARRAY_1S; value : smallint) ; overload;

procedure inc(pArray : ARRAY_1S) ; overload;

procedure dec(pArray : ARRAY_1S) ; overload;

procedure incby(pArray : ARRAY_1S; value : smallint) ; overload;

procedure decby(pArray : ARRAY_1S; value : smallint) ; overload;
procedure set_all(pArray : ARRAY_2S; value : smallint) ; overload;

procedure inc(pArray : ARRAY_2S) ; overload;

procedure dec(pArray : ARRAY_2S) ; overload;

procedure incby(pArray : ARRAY_2S; value : smallint) ; overload;

procedure decby(pArray : ARRAY_2S; value : smallint) ; overload;
procedure set_all(pArray : ARRAY_3S; value : smallint) ; overload;

procedure inc(pArray : ARRAY_3S) ; overload;

procedure dec(pArray : ARRAY_3S) ; overload;

procedure incby(pArray : ARRAY_3S; value : smallint) ; overload;

procedure decby(pArray : ARRAY_3S; value : smallint) ; overload;
procedure set_all(pArray : ARRAY_4S; value : smallint) ; overload;

procedure inc(pArray : ARRAY_4S) ; overload;

procedure dec(pArray : ARRAY_4S) ; overload;

procedure incby(pArray : ARRAY_4S; value : smallint) ; overload;

procedure decby(pArray : ARRAY_4S; value : smallint) ; overload;
procedure set_all(pArray : ARRAY_5S; value : smallint) ; overload;

procedure inc(pArray : ARRAY_5S) ; overload;

procedure dec(pArray : ARRAY_5S) ; overload;

procedure incby(pArray : ARRAY_5S; value : smallint) ; overload;

procedure decby(pArray : ARRAY_5S; value : smallint) ; overload;
procedure set_all(pArray : ARRAY_6S; value : smallint) ; overload;

procedure inc(pArray : ARRAY_6S) ; overload;

procedure dec(pArray : ARRAY_6S) ; overload;

procedure incby(pArray : ARRAY_6S; value : smallint) ; overload;

procedure decby(pArray : ARRAY_6S; value : smallint) ; overload;
procedure set_all(pArray : ARRAY_7S; value : smallint) ; overload;

procedure inc(pArray : ARRAY_7S) ; overload;

procedure dec(pArray : ARRAY_7S) ; overload;

procedure incby(pArray : ARRAY_7S; value : smallint) ; overload;

procedure decby(pArray : ARRAY_7S; value : smallint) ; overload;
procedure set_all(pArray : ARRAY_8S; value : smallint) ; overload;

procedure inc(pArray : ARRAY_8S) ; overload;

procedure dec(pArray : ARRAY_8S) ; overload;

procedure incby(pArray : ARRAY_8S; value : smallint) ; overload;

procedure decby(pArray : ARRAY_8S; value : smallint) ; overload;
procedure set_all(pArray : ARRAY_9S; value : smallint) ; overload;

procedure inc(pArray : ARRAY_9S) ; overload;

procedure dec(pArray : ARRAY_9S) ; overload;

procedure incby(pArray : ARRAY_9S; value : smallint) ; overload;

procedure decby(pArray : ARRAY_9S; value : smallint) ; overload;
procedure set_all(pArray : ARRAY_10S; value : smallint) ; overload;

procedure inc(pArray : ARRAY_10S) ; overload;

procedure dec(pArray : ARRAY_10S) ; overload;

procedure incby(pArray : ARRAY_10S; value : smallint) ; overload;

procedure decby(pArray : ARRAY_10S; value : smallint) ; overload;
procedure set_all(pArray : ARRAY_1US; value : word) ; overload;

procedure inc(pArray : ARRAY_1US) ; overload;

procedure dec(pArray : ARRAY_1US) ; overload;

procedure incby(pArray : ARRAY_1US; value : word) ; overload;

procedure decby(pArray : ARRAY_1US; value : word) ; overload;
procedure set_all(pArray : ARRAY_2US; value : word) ; overload;

procedure inc(pArray : ARRAY_2US) ; overload;

procedure dec(pArray : ARRAY_2US) ; overload;

procedure incby(pArray : ARRAY_2US; value : word) ; overload;

procedure decby(pArray : ARRAY_2US; value : word) ; overload;
procedure set_all(pArray : ARRAY_3US; value : word) ; overload;

procedure inc(pArray : ARRAY_3US) ; overload;

procedure dec(pArray : ARRAY_3US) ; overload;

procedure incby(pArray : ARRAY_3US; value : word) ; overload;

procedure decby(pArray : ARRAY_3US; value : word) ; overload;
procedure set_all(pArray : ARRAY_4US; value : word) ; overload;

procedure inc(pArray : ARRAY_4US) ; overload;

procedure dec(pArray : ARRAY_4US) ; overload;

procedure incby(pArray : ARRAY_4US; value : word) ; overload;

procedure decby(pArray : ARRAY_4US; value : word) ; overload;
procedure set_all(pArray : ARRAY_5US; value : word) ; overload;

procedure inc(pArray : ARRAY_5US) ; overload;

procedure dec(pArray : ARRAY_5US) ; overload;

procedure incby(pArray : ARRAY_5US; value : word) ; overload;

procedure decby(pArray : ARRAY_5US; value : word) ; overload;
procedure set_all(pArray : ARRAY_6US; value : word) ; overload;

procedure inc(pArray : ARRAY_6US) ; overload;

procedure dec(pArray : ARRAY_6US) ; overload;

procedure incby(pArray : ARRAY_6US; value : word) ; overload;

procedure decby(pArray : ARRAY_6US; value : word) ; overload;
procedure set_all(pArray : ARRAY_7US; value : word) ; overload;

procedure inc(pArray : ARRAY_7US) ; overload;

procedure dec(pArray : ARRAY_7US) ; overload;

procedure incby(pArray : ARRAY_7US; value : word) ; overload;

procedure decby(pArray : ARRAY_7US; value : word) ; overload;
procedure set_all(pArray : ARRAY_8US; value : word) ; overload;

procedure inc(pArray : ARRAY_8US) ; overload;

procedure dec(pArray : ARRAY_8US) ; overload;

procedure incby(pArray : ARRAY_8US; value : word) ; overload;

procedure decby(pArray : ARRAY_8US; value : word) ; overload;
procedure set_all(pArray : ARRAY_9US; value : word) ; overload;

procedure inc(pArray : ARRAY_9US) ; overload;

procedure dec(pArray : ARRAY_9US) ; overload;

procedure incby(pArray : ARRAY_9US; value : word) ; overload;

procedure decby(pArray : ARRAY_9US; value : word) ; overload;
procedure set_all(pArray : ARRAY_10US; value : word) ; overload;

procedure inc(pArray : ARRAY_10US) ; overload;

procedure dec(pArray : ARRAY_10US) ; overload;

procedure incby(pArray : ARRAY_10US; value : word) ; overload;

procedure decby(pArray : ARRAY_10US; value : word) ; overload;
procedure set_all(pArray : ARRAY_1L; value : longint) ; overload;

procedure inc(pArray : ARRAY_1L) ; overload;

procedure dec(pArray : ARRAY_1L) ; overload;

procedure incby(pArray : ARRAY_1L; value : longint) ; overload;

procedure decby(pArray : ARRAY_1L; value : longint) ; overload;
procedure set_all(pArray : ARRAY_2L; value : longint) ; overload;

procedure inc(pArray : ARRAY_2L) ; overload;

procedure dec(pArray : ARRAY_2L) ; overload;

procedure incby(pArray : ARRAY_2L; value : longint) ; overload;

procedure decby(pArray : ARRAY_2L; value : longint) ; overload;
procedure set_all(pArray : ARRAY_3L; value : longint) ; overload;

procedure inc(pArray : ARRAY_3L) ; overload;

procedure dec(pArray : ARRAY_3L) ; overload;

procedure incby(pArray : ARRAY_3L; value : longint) ; overload;

procedure decby(pArray : ARRAY_3L; value : longint) ; overload;
procedure set_all(pArray : ARRAY_4L; value : longint) ; overload;

procedure inc(pArray : ARRAY_4L) ; overload;

procedure dec(pArray : ARRAY_4L) ; overload;

procedure incby(pArray : ARRAY_4L; value : longint) ; overload;

procedure decby(pArray : ARRAY_4L; value : longint) ; overload;
procedure set_all(pArray : ARRAY_5L; value : longint) ; overload;

procedure inc(pArray : ARRAY_5L) ; overload;

procedure dec(pArray : ARRAY_5L) ; overload;

procedure incby(pArray : ARRAY_5L; value : longint) ; overload;

procedure decby(pArray : ARRAY_5L; value : longint) ; overload;
procedure set_all(pArray : ARRAY_6L; value : longint) ; overload;

procedure inc(pArray : ARRAY_6L) ; overload;

procedure dec(pArray : ARRAY_6L) ; overload;

procedure incby(pArray : ARRAY_6L; value : longint) ; overload;

procedure decby(pArray : ARRAY_6L; value : longint) ; overload;
procedure set_all(pArray : ARRAY_7L; value : longint) ; overload;

procedure inc(pArray : ARRAY_7L) ; overload;

procedure dec(pArray : ARRAY_7L) ; overload;

procedure incby(pArray : ARRAY_7L; value : longint) ; overload;

procedure decby(pArray : ARRAY_7L; value : longint) ; overload;
procedure set_all(pArray : ARRAY_8L; value : longint) ; overload;

procedure inc(pArray : ARRAY_8L) ; overload;

procedure dec(pArray : ARRAY_8L) ; overload;

procedure incby(pArray : ARRAY_8L; value : longint) ; overload;

procedure decby(pArray : ARRAY_8L; value : longint) ; overload;
procedure set_all(pArray : ARRAY_9L; value : longint) ; overload;

procedure inc(pArray : ARRAY_9L) ; overload;

procedure dec(pArray : ARRAY_9L) ; overload;

procedure incby(pArray : ARRAY_9L; value : longint) ; overload;

procedure decby(pArray : ARRAY_9L; value : longint) ; overload;
procedure set_all(pArray : ARRAY_10L; value : longint) ; overload;

procedure inc(pArray : ARRAY_10L) ; overload;

procedure dec(pArray : ARRAY_10L) ; overload;

procedure incby(pArray : ARRAY_10L; value : longint) ; overload;

procedure decby(pArray : ARRAY_10L; value : longint) ; overload;
procedure set_all(pArray : ARRAY_1UL; value : longword) ; overload;

procedure inc(pArray : ARRAY_1UL) ; overload;

procedure dec(pArray : ARRAY_1UL) ; overload;

procedure incby(pArray : ARRAY_1UL; value : longword) ; overload;

procedure decby(pArray : ARRAY_1UL; value : longword) ; overload;
procedure set_all(pArray : ARRAY_2UL; value : longword) ; overload;

procedure inc(pArray : ARRAY_2UL) ; overload;

procedure dec(pArray : ARRAY_2UL) ; overload;

procedure incby(pArray : ARRAY_2UL; value : longword) ; overload;

procedure decby(pArray : ARRAY_2UL; value : longword) ; overload;
procedure set_all(pArray : ARRAY_3UL; value : longword) ; overload;

procedure inc(pArray : ARRAY_3UL) ; overload;

procedure dec(pArray : ARRAY_3UL) ; overload;

procedure incby(pArray : ARRAY_3UL; value : longword) ; overload;

procedure decby(pArray : ARRAY_3UL; value : longword) ; overload;
procedure set_all(pArray : ARRAY_4UL; value : longword) ; overload;

procedure inc(pArray : ARRAY_4UL) ; overload;

procedure dec(pArray : ARRAY_4UL) ; overload;

procedure incby(pArray : ARRAY_4UL; value : longword) ; overload;

procedure decby(pArray : ARRAY_4UL; value : longword) ; overload;
procedure set_all(pArray : ARRAY_5UL; value : longword) ; overload;

procedure inc(pArray : ARRAY_5UL) ; overload;

procedure dec(pArray : ARRAY_5UL) ; overload;

procedure incby(pArray : ARRAY_5UL; value : longword) ; overload;

procedure decby(pArray : ARRAY_5UL; value : longword) ; overload;
procedure set_all(pArray : ARRAY_6UL; value : longword) ; overload;

procedure inc(pArray : ARRAY_6UL) ; overload;

procedure dec(pArray : ARRAY_6UL) ; overload;

procedure incby(pArray : ARRAY_6UL; value : longword) ; overload;

procedure decby(pArray : ARRAY_6UL; value : longword) ; overload;
procedure set_all(pArray : ARRAY_7UL; value : longword) ; overload;

procedure inc(pArray : ARRAY_7UL) ; overload;

procedure dec(pArray : ARRAY_7UL) ; overload;

procedure incby(pArray : ARRAY_7UL; value : longword) ; overload;

procedure decby(pArray : ARRAY_7UL; value : longword) ; overload;
procedure set_all(pArray : ARRAY_8UL; value : longword) ; overload;

procedure inc(pArray : ARRAY_8UL) ; overload;

procedure dec(pArray : ARRAY_8UL) ; overload;

procedure incby(pArray : ARRAY_8UL; value : longword) ; overload;

procedure decby(pArray : ARRAY_8UL; value : longword) ; overload;
procedure set_all(pArray : ARRAY_9UL; value : longword) ; overload;

procedure inc(pArray : ARRAY_9UL) ; overload;

procedure dec(pArray : ARRAY_9UL) ; overload;

procedure incby(pArray : ARRAY_9UL; value : longword) ; overload;

procedure decby(pArray : ARRAY_9UL; value : longword) ; overload;
procedure set_all(pArray : ARRAY_10UL; value : longword) ; overload;

procedure inc(pArray : ARRAY_10UL) ; overload;

procedure dec(pArray : ARRAY_10UL) ; overload;

procedure incby(pArray : ARRAY_10UL; value : longword) ; overload;

procedure decby(pArray : ARRAY_10UL; value : longword) ; overload;
procedure set_all(pArray : ARRAY_1F; value : single) ; overload;

procedure inc(pArray : ARRAY_1F) ; overload;

procedure dec(pArray : ARRAY_1F) ; overload;

procedure incby(pArray : ARRAY_1F; value : single) ; overload;

procedure decby(pArray : ARRAY_1F; value : single) ; overload;
procedure set_all(pArray : ARRAY_2F; value : single) ; overload;

procedure inc(pArray : ARRAY_2F) ; overload;

procedure dec(pArray : ARRAY_2F) ; overload;

procedure incby(pArray : ARRAY_2F; value : single) ; overload;

procedure decby(pArray : ARRAY_2F; value : single) ; overload;
procedure set_all(pArray : ARRAY_3F; value : single) ; overload;

procedure inc(pArray : ARRAY_3F) ; overload;

procedure dec(pArray : ARRAY_3F) ; overload;

procedure incby(pArray : ARRAY_3F; value : single) ; overload;

procedure decby(pArray : ARRAY_3F; value : single) ; overload;
procedure set_all(pArray : ARRAY_4F; value : single) ; overload;

procedure inc(pArray : ARRAY_4F) ; overload;

procedure dec(pArray : ARRAY_4F) ; overload;

procedure incby(pArray : ARRAY_4F; value : single) ; overload;

procedure decby(pArray : ARRAY_4F; value : single) ; overload;
procedure set_all(pArray : ARRAY_5F; value : single) ; overload;

procedure inc(pArray : ARRAY_5F) ; overload;

procedure dec(pArray : ARRAY_5F) ; overload;

procedure incby(pArray : ARRAY_5F; value : single) ; overload;

procedure decby(pArray : ARRAY_5F; value : single) ; overload;
procedure set_all(pArray : ARRAY_6F; value : single) ; overload;

procedure inc(pArray : ARRAY_6F) ; overload;

procedure dec(pArray : ARRAY_6F) ; overload;

procedure incby(pArray : ARRAY_6F; value : single) ; overload;

procedure decby(pArray : ARRAY_6F; value : single) ; overload;
procedure set_all(pArray : ARRAY_7F; value : single) ; overload;

procedure inc(pArray : ARRAY_7F) ; overload;

procedure dec(pArray : ARRAY_7F) ; overload;

procedure incby(pArray : ARRAY_7F; value : single) ; overload;

procedure decby(pArray : ARRAY_7F; value : single) ; overload;
procedure set_all(pArray : ARRAY_8F; value : single) ; overload;

procedure inc(pArray : ARRAY_8F) ; overload;

procedure dec(pArray : ARRAY_8F) ; overload;

procedure incby(pArray : ARRAY_8F; value : single) ; overload;

procedure decby(pArray : ARRAY_8F; value : single) ; overload;
procedure set_all(pArray : ARRAY_9F; value : single) ; overload;

procedure inc(pArray : ARRAY_9F) ; overload;

procedure dec(pArray : ARRAY_9F) ; overload;

procedure incby(pArray : ARRAY_9F; value : single) ; overload;

procedure decby(pArray : ARRAY_9F; value : single) ; overload;
procedure set_all(pArray : ARRAY_10F; value : single) ; overload;

procedure inc(pArray : ARRAY_10F) ; overload;

procedure dec(pArray : ARRAY_10F) ; overload;

procedure incby(pArray : ARRAY_10F; value : single) ; overload;

procedure decby(pArray : ARRAY_10F; value : single) ; overload;
procedure set_all(pArray : ARRAY_1D; value : double) ; overload;

procedure inc(pArray : ARRAY_1D) ; overload;

procedure dec(pArray : ARRAY_1D) ; overload;

procedure incby(pArray : ARRAY_1D; value : double) ; overload;

procedure decby(pArray : ARRAY_1D; value : double) ; overload;
procedure set_all(pArray : ARRAY_2D; value : double) ; overload;

procedure inc(pArray : ARRAY_2D) ; overload;

procedure dec(pArray : ARRAY_2D) ; overload;

procedure incby(pArray : ARRAY_2D; value : double) ; overload;

procedure decby(pArray : ARRAY_2D; value : double) ; overload;
procedure set_all(pArray : ARRAY_3D; value : double) ; overload;

procedure inc(pArray : ARRAY_3D) ; overload;

procedure dec(pArray : ARRAY_3D) ; overload;

procedure incby(pArray : ARRAY_3D; value : double) ; overload;

procedure decby(pArray : ARRAY_3D; value : double) ; overload;
procedure set_all(pArray : ARRAY_4D; value : double) ; overload;

procedure inc(pArray : ARRAY_4D) ; overload;

procedure dec(pArray : ARRAY_4D) ; overload;

procedure incby(pArray : ARRAY_4D; value : double) ; overload;

procedure decby(pArray : ARRAY_4D; value : double) ; overload;
procedure set_all(pArray : ARRAY_5D; value : double) ; overload;

procedure inc(pArray : ARRAY_5D) ; overload;

procedure dec(pArray : ARRAY_5D) ; overload;

procedure incby(pArray : ARRAY_5D; value : double) ; overload;

procedure decby(pArray : ARRAY_5D; value : double) ; overload;
procedure set_all(pArray : ARRAY_6D; value : double) ; overload;

procedure inc(pArray : ARRAY_6D) ; overload;

procedure dec(pArray : ARRAY_6D) ; overload;

procedure incby(pArray : ARRAY_6D; value : double) ; overload;

procedure decby(pArray : ARRAY_6D; value : double) ; overload;
procedure set_all(pArray : ARRAY_7D; value : double) ; overload;

procedure inc(pArray : ARRAY_7D) ; overload;

procedure dec(pArray : ARRAY_7D) ; overload;

procedure incby(pArray : ARRAY_7D; value : double) ; overload;

procedure decby(pArray : ARRAY_7D; value : double) ; overload;
procedure set_all(pArray : ARRAY_8D; value : double) ; overload;

procedure inc(pArray : ARRAY_8D) ; overload;

procedure dec(pArray : ARRAY_8D) ; overload;

procedure incby(pArray : ARRAY_8D; value : double) ; overload;

procedure decby(pArray : ARRAY_8D; value : double) ; overload;
procedure set_all(pArray : ARRAY_9D; value : double) ; overload;

procedure inc(pArray : ARRAY_9D) ; overload;

procedure dec(pArray : ARRAY_9D) ; overload;

procedure incby(pArray : ARRAY_9D; value : double) ; overload;

procedure decby(pArray : ARRAY_9D; value : double) ; overload;
procedure set_all(pArray : ARRAY_10D; value : double) ; overload;

procedure inc(pArray : ARRAY_10D) ; overload;

procedure dec(pArray : ARRAY_10D) ; overload;

procedure incby(pArray : ARRAY_10D; value : double) ; overload;

procedure decby(pArray : ARRAY_10D; value : double) ; overload;
procedure mulby(pArray : ARRAY_1F; value : single) ; overload;

procedure divby(pArray : ARRAY_1F; value : single) ; overload;

procedure mulby(pArray : ARRAY_2F; value : single) ; overload;

procedure divby(pArray : ARRAY_2F; value : single) ; overload;

procedure mulby(pArray : ARRAY_3F; value : single) ; overload;

procedure divby(pArray : ARRAY_3F; value : single) ; overload;

procedure mulby(pArray : ARRAY_4F; value : single) ; overload;

procedure divby(pArray : ARRAY_4F; value : single) ; overload;

procedure mulby(pArray : ARRAY_5F; value : single) ; overload;

procedure divby(pArray : ARRAY_5F; value : single) ; overload;

procedure mulby(pArray : ARRAY_6F; value : single) ; overload;

procedure divby(pArray : ARRAY_6F; value : single) ; overload;

procedure mulby(pArray : ARRAY_7F; value : single) ; overload;

procedure divby(pArray : ARRAY_7F; value : single) ; overload;

procedure mulby(pArray : ARRAY_8F; value : single) ; overload;

procedure divby(pArray : ARRAY_8F; value : single) ; overload;

procedure mulby(pArray : ARRAY_9F; value : single) ; overload;

procedure divby(pArray : ARRAY_9F; value : single) ; overload;

procedure mulby(pArray : ARRAY_10F; value : single) ; overload;

procedure divby(pArray : ARRAY_10F; value : single) ; overload;

procedure mulby(pArray : ARRAY_1D; value : double) ; overload;

procedure divby(pArray : ARRAY_1D; value : double) ; overload;

procedure mulby(pArray : ARRAY_2D; value : double) ; overload;

procedure divby(pArray : ARRAY_2D; value : double) ; overload;

procedure mulby(pArray : ARRAY_3D; value : double) ; overload;

procedure divby(pArray : ARRAY_3D; value : double) ; overload;

procedure mulby(pArray : ARRAY_4D; value : double) ; overload;

procedure divby(pArray : ARRAY_4D; value : double) ; overload;

procedure mulby(pArray : ARRAY_5D; value : double) ; overload;

procedure divby(pArray : ARRAY_5D; value : double) ; overload;

procedure mulby(pArray : ARRAY_6D; value : double) ; overload;

procedure divby(pArray : ARRAY_6D; value : double) ; overload;

procedure mulby(pArray : ARRAY_7D; value : double) ; overload;

procedure divby(pArray : ARRAY_7D; value : double) ; overload;

procedure mulby(pArray : ARRAY_8D; value : double) ; overload;

procedure divby(pArray : ARRAY_8D; value : double) ; overload;

procedure mulby(pArray : ARRAY_9D; value : double) ; overload;

procedure divby(pArray : ARRAY_9D; value : double) ; overload;

procedure mulby(pArray : ARRAY_10D; value : double) ; overload;

procedure divby(pArray : ARRAY_10D; value : double) ; overload;

// flatten methods
function createFlattened(pArray : ARRAY_2B) : ARRAY_1B ; overload;

function createFlattened(pArray : ARRAY_3B) : ARRAY_1B ; overload;

function createFlattened(pArray : ARRAY_4B) : ARRAY_1B ; overload;

function createFlattened(pArray : ARRAY_5B) : ARRAY_1B ; overload;

function createFlattened(pArray : ARRAY_6B) : ARRAY_1B ; overload;

function createFlattened(pArray : ARRAY_7B) : ARRAY_1B ; overload;

function createFlattened(pArray : ARRAY_8B) : ARRAY_1B ; overload;

function createFlattened(pArray : ARRAY_9B) : ARRAY_1B ; overload;

function createFlattened(pArray : ARRAY_10B) : ARRAY_1B ; overload;

// createSlice methods
function createSlice(pArray : ARRAY_2B; i1 : longint) : ARRAY_1B ; overload;

function createSlice(pArray : ARRAY_3B; i1 : longint) : ARRAY_2B ; overload;

function createSlice(pArray : ARRAY_3B; i1, i2 : longint) : ARRAY_1B ; overload;

function createSlice(pArray : ARRAY_4B; i1 : longint) : ARRAY_3B ; overload;

function createSlice(pArray : ARRAY_4B; i1, i2 : longint) : ARRAY_2B ; overload;

function createSlice(pArray : ARRAY_4B; i1, i2, i3 : longint) : ARRAY_1B ; overload;

function createSlice(pArray : ARRAY_5B; i1 : longint) : ARRAY_4B ; overload;

function createSlice(pArray : ARRAY_5B; i1, i2 : longint) : ARRAY_3B ; overload;

function createSlice(pArray : ARRAY_5B; i1, i2, i3 : longint) : ARRAY_2B ; overload;

function createSlice(pArray : ARRAY_5B; i1, i2, i3, i4 : longint) : ARRAY_1B ; overload;

function createSlice(pArray : ARRAY_6B; i1 : longint) : ARRAY_5B ; overload;

function createSlice(pArray : ARRAY_6B; i1, i2 : longint) : ARRAY_4B ; overload;

function createSlice(pArray : ARRAY_6B; i1, i2, i3 : longint) : ARRAY_3B ; overload;

function createSlice(pArray : ARRAY_6B; i1, i2, i3, i4 : longint) : ARRAY_2B ; overload;

function createSlice(pArray : ARRAY_6B; i1, i2, i3, i4, i5 : longint) : ARRAY_1B ; overload;

function createSlice(pArray : ARRAY_7B; i1 : longint) : ARRAY_6B ; overload;

function createSlice(pArray : ARRAY_7B; i1, i2 : longint) : ARRAY_5B ; overload;

function createSlice(pArray : ARRAY_7B; i1, i2, i3 : longint) : ARRAY_4B ; overload;

function createSlice(pArray : ARRAY_7B; i1, i2, i3, i4 : longint) : ARRAY_3B ; overload;

function createSlice(pArray : ARRAY_7B; i1, i2, i3, i4, i5 : longint) : ARRAY_2B ; overload;

function createSlice(pArray : ARRAY_7B; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_1B ; overload;

function createSlice(pArray : ARRAY_8B; i1 : longint) : ARRAY_7B ; overload;

function createSlice(pArray : ARRAY_8B; i1, i2 : longint) : ARRAY_6B ; overload;

function createSlice(pArray : ARRAY_8B; i1, i2, i3 : longint) : ARRAY_5B ; overload;

function createSlice(pArray : ARRAY_8B; i1, i2, i3, i4 : longint) : ARRAY_4B ; overload;

function createSlice(pArray : ARRAY_8B; i1, i2, i3, i4, i5 : longint) : ARRAY_3B ; overload;

function createSlice(pArray : ARRAY_8B; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_2B ; overload;

function createSlice(pArray : ARRAY_8B; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_1B ; overload;

function createSlice(pArray : ARRAY_9B; i1 : longint) : ARRAY_8B ; overload;

function createSlice(pArray : ARRAY_9B; i1, i2 : longint) : ARRAY_7B ; overload;

function createSlice(pArray : ARRAY_9B; i1, i2, i3 : longint) : ARRAY_6B ; overload;

function createSlice(pArray : ARRAY_9B; i1, i2, i3, i4 : longint) : ARRAY_5B ; overload;

function createSlice(pArray : ARRAY_9B; i1, i2, i3, i4, i5 : longint) : ARRAY_4B ; overload;

function createSlice(pArray : ARRAY_9B; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_3B ; overload;

function createSlice(pArray : ARRAY_9B; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_2B ; overload;

function createSlice(pArray : ARRAY_9B; i1, i2, i3, i4, i5, i6, i7, i8 : longint) : ARRAY_1B ; overload;

function createSlice(pArray : ARRAY_10B; i1 : longint) : ARRAY_9B ; overload;

function createSlice(pArray : ARRAY_10B; i1, i2 : longint) : ARRAY_8B ; overload;

function createSlice(pArray : ARRAY_10B; i1, i2, i3 : longint) : ARRAY_7B ; overload;

function createSlice(pArray : ARRAY_10B; i1, i2, i3, i4 : longint) : ARRAY_6B ; overload;

function createSlice(pArray : ARRAY_10B; i1, i2, i3, i4, i5 : longint) : ARRAY_5B ; overload;

function createSlice(pArray : ARRAY_10B; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_4B ; overload;

function createSlice(pArray : ARRAY_10B; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_3B ; overload;

function createSlice(pArray : ARRAY_10B; i1, i2, i3, i4, i5, i6, i7, i8 : longint) : ARRAY_2B ; overload;

function createSlice(pArray : ARRAY_10B; i1, i2, i3, i4, i5, i6, i7, i8, i9 : longint) : ARRAY_1B ; overload;

// Stack size method
function stackSize(pArray : ARRAY_1B) : longint ; overload;

// Stack creation method
function createStack(var pArray : ARRAY_1B; nInitialSize : longint = DEFAULT_STACK_SIZE) : boolean ; overload;

// Stack growing method
procedure growStack(var pArray : ARRAY_1B; nIndexNeeded : longint); overload;

// Simplified array creation methods
// 1D
function create(var pArray : ARRAY_1B;
                nBaseIndex, nSize : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 2D
function create(var pArray : ARRAY_2B;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 3D
function create(var pArray : ARRAY_3B;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 4D
function create(var pArray : ARRAY_4B;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 5D
function create(var pArray : ARRAY_5B;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 6D
function create(var pArray : ARRAY_6B;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 7D
function create(var pArray : ARRAY_7B;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 8D
function create(var pArray : ARRAY_8B;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 9D
function create(var pArray : ARRAY_9B;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                nBaseIndex9, nSize9 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 10D
function create(var pArray : ARRAY_10B;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                nBaseIndex9, nSize9 : longint;
                nBaseIndex10, nSize10 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// Bounds checking inline wrappers
procedure check1(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_1B ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString) ; inline;

procedure check2(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_2B ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString) ; inline;

procedure check3(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_3B ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString) ; inline;

procedure check4(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_4B ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString) ; inline;

procedure check5(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_5B ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString) ; inline;

procedure check6(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_6B ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString) ; inline;

procedure check7(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_7B ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString) ; inline;

procedure check8(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_8B ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString ;
                 ix8 : integer ;
                 n8 : AnsiString) ; inline;

procedure check9(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_9B ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString ;
                 ix8 : integer ;
                 n8 : AnsiString ;
                 ix9 : integer ;
                 n9 : AnsiString) ; inline;

procedure check10(var pContext : AdtArrayPlanActor ;
                  pArray : ARRAY_10B ;
                  sArrayName, sFileName, pFileLine : AnsiString ;
                  bThrowException : boolean ;
                  ix1 : integer ;
                  n1 : AnsiString ;
                  ix2 : integer ;
                  n2 : AnsiString ;
                  ix3 : integer ;
                  n3 : AnsiString ;
                  ix4 : integer ;
                  n4 : AnsiString ;
                  ix5 : integer ;
                  n5 : AnsiString ;
                  ix6 : integer ;
                  n6 : AnsiString ;
                  ix7 : integer ;
                  n7 : AnsiString ;
                  ix8 : integer ;
                  n8 : AnsiString ;
                  ix9 : integer ;
                  n9 : AnsiString ;
                  ix10 : integer ;
                  n10 : AnsiString) ; inline;
// flatten methods
function createFlattened(pArray : ARRAY_2C) : ARRAY_1C ; overload;

function createFlattened(pArray : ARRAY_3C) : ARRAY_1C ; overload;

function createFlattened(pArray : ARRAY_4C) : ARRAY_1C ; overload;

function createFlattened(pArray : ARRAY_5C) : ARRAY_1C ; overload;

function createFlattened(pArray : ARRAY_6C) : ARRAY_1C ; overload;

function createFlattened(pArray : ARRAY_7C) : ARRAY_1C ; overload;

function createFlattened(pArray : ARRAY_8C) : ARRAY_1C ; overload;

function createFlattened(pArray : ARRAY_9C) : ARRAY_1C ; overload;

function createFlattened(pArray : ARRAY_10C) : ARRAY_1C ; overload;

// createSlice methods
function createSlice(pArray : ARRAY_2C; i1 : longint) : ARRAY_1C ; overload;

function createSlice(pArray : ARRAY_3C; i1 : longint) : ARRAY_2C ; overload;

function createSlice(pArray : ARRAY_3C; i1, i2 : longint) : ARRAY_1C ; overload;

function createSlice(pArray : ARRAY_4C; i1 : longint) : ARRAY_3C ; overload;

function createSlice(pArray : ARRAY_4C; i1, i2 : longint) : ARRAY_2C ; overload;

function createSlice(pArray : ARRAY_4C; i1, i2, i3 : longint) : ARRAY_1C ; overload;

function createSlice(pArray : ARRAY_5C; i1 : longint) : ARRAY_4C ; overload;

function createSlice(pArray : ARRAY_5C; i1, i2 : longint) : ARRAY_3C ; overload;

function createSlice(pArray : ARRAY_5C; i1, i2, i3 : longint) : ARRAY_2C ; overload;

function createSlice(pArray : ARRAY_5C; i1, i2, i3, i4 : longint) : ARRAY_1C ; overload;

function createSlice(pArray : ARRAY_6C; i1 : longint) : ARRAY_5C ; overload;

function createSlice(pArray : ARRAY_6C; i1, i2 : longint) : ARRAY_4C ; overload;

function createSlice(pArray : ARRAY_6C; i1, i2, i3 : longint) : ARRAY_3C ; overload;

function createSlice(pArray : ARRAY_6C; i1, i2, i3, i4 : longint) : ARRAY_2C ; overload;

function createSlice(pArray : ARRAY_6C; i1, i2, i3, i4, i5 : longint) : ARRAY_1C ; overload;

function createSlice(pArray : ARRAY_7C; i1 : longint) : ARRAY_6C ; overload;

function createSlice(pArray : ARRAY_7C; i1, i2 : longint) : ARRAY_5C ; overload;

function createSlice(pArray : ARRAY_7C; i1, i2, i3 : longint) : ARRAY_4C ; overload;

function createSlice(pArray : ARRAY_7C; i1, i2, i3, i4 : longint) : ARRAY_3C ; overload;

function createSlice(pArray : ARRAY_7C; i1, i2, i3, i4, i5 : longint) : ARRAY_2C ; overload;

function createSlice(pArray : ARRAY_7C; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_1C ; overload;

function createSlice(pArray : ARRAY_8C; i1 : longint) : ARRAY_7C ; overload;

function createSlice(pArray : ARRAY_8C; i1, i2 : longint) : ARRAY_6C ; overload;

function createSlice(pArray : ARRAY_8C; i1, i2, i3 : longint) : ARRAY_5C ; overload;

function createSlice(pArray : ARRAY_8C; i1, i2, i3, i4 : longint) : ARRAY_4C ; overload;

function createSlice(pArray : ARRAY_8C; i1, i2, i3, i4, i5 : longint) : ARRAY_3C ; overload;

function createSlice(pArray : ARRAY_8C; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_2C ; overload;

function createSlice(pArray : ARRAY_8C; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_1C ; overload;

function createSlice(pArray : ARRAY_9C; i1 : longint) : ARRAY_8C ; overload;

function createSlice(pArray : ARRAY_9C; i1, i2 : longint) : ARRAY_7C ; overload;

function createSlice(pArray : ARRAY_9C; i1, i2, i3 : longint) : ARRAY_6C ; overload;

function createSlice(pArray : ARRAY_9C; i1, i2, i3, i4 : longint) : ARRAY_5C ; overload;

function createSlice(pArray : ARRAY_9C; i1, i2, i3, i4, i5 : longint) : ARRAY_4C ; overload;

function createSlice(pArray : ARRAY_9C; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_3C ; overload;

function createSlice(pArray : ARRAY_9C; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_2C ; overload;

function createSlice(pArray : ARRAY_9C; i1, i2, i3, i4, i5, i6, i7, i8 : longint) : ARRAY_1C ; overload;

function createSlice(pArray : ARRAY_10C; i1 : longint) : ARRAY_9C ; overload;

function createSlice(pArray : ARRAY_10C; i1, i2 : longint) : ARRAY_8C ; overload;

function createSlice(pArray : ARRAY_10C; i1, i2, i3 : longint) : ARRAY_7C ; overload;

function createSlice(pArray : ARRAY_10C; i1, i2, i3, i4 : longint) : ARRAY_6C ; overload;

function createSlice(pArray : ARRAY_10C; i1, i2, i3, i4, i5 : longint) : ARRAY_5C ; overload;

function createSlice(pArray : ARRAY_10C; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_4C ; overload;

function createSlice(pArray : ARRAY_10C; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_3C ; overload;

function createSlice(pArray : ARRAY_10C; i1, i2, i3, i4, i5, i6, i7, i8 : longint) : ARRAY_2C ; overload;

function createSlice(pArray : ARRAY_10C; i1, i2, i3, i4, i5, i6, i7, i8, i9 : longint) : ARRAY_1C ; overload;

// Stack size method
function stackSize(pArray : ARRAY_1C) : longint ; overload;

// Stack creation method
function createStack(var pArray : ARRAY_1C; nInitialSize : longint = DEFAULT_STACK_SIZE) : boolean ; overload;

// Stack growing method
procedure growStack(var pArray : ARRAY_1C; nIndexNeeded : longint); overload;

// Simplified array creation methods
// 1D
function create(var pArray : ARRAY_1C;
                nBaseIndex, nSize : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 2D
function create(var pArray : ARRAY_2C;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 3D
function create(var pArray : ARRAY_3C;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 4D
function create(var pArray : ARRAY_4C;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 5D
function create(var pArray : ARRAY_5C;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 6D
function create(var pArray : ARRAY_6C;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 7D
function create(var pArray : ARRAY_7C;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 8D
function create(var pArray : ARRAY_8C;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 9D
function create(var pArray : ARRAY_9C;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                nBaseIndex9, nSize9 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 10D
function create(var pArray : ARRAY_10C;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                nBaseIndex9, nSize9 : longint;
                nBaseIndex10, nSize10 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// Bounds checking inline wrappers
procedure check1(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_1C ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString) ; inline;

procedure check2(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_2C ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString) ; inline;

procedure check3(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_3C ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString) ; inline;

procedure check4(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_4C ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString) ; inline;

procedure check5(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_5C ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString) ; inline;

procedure check6(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_6C ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString) ; inline;

procedure check7(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_7C ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString) ; inline;

procedure check8(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_8C ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString ;
                 ix8 : integer ;
                 n8 : AnsiString) ; inline;

procedure check9(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_9C ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString ;
                 ix8 : integer ;
                 n8 : AnsiString ;
                 ix9 : integer ;
                 n9 : AnsiString) ; inline;

procedure check10(var pContext : AdtArrayPlanActor ;
                  pArray : ARRAY_10C ;
                  sArrayName, sFileName, pFileLine : AnsiString ;
                  bThrowException : boolean ;
                  ix1 : integer ;
                  n1 : AnsiString ;
                  ix2 : integer ;
                  n2 : AnsiString ;
                  ix3 : integer ;
                  n3 : AnsiString ;
                  ix4 : integer ;
                  n4 : AnsiString ;
                  ix5 : integer ;
                  n5 : AnsiString ;
                  ix6 : integer ;
                  n6 : AnsiString ;
                  ix7 : integer ;
                  n7 : AnsiString ;
                  ix8 : integer ;
                  n8 : AnsiString ;
                  ix9 : integer ;
                  n9 : AnsiString ;
                  ix10 : integer ;
                  n10 : AnsiString) ; inline;
// flatten methods
function createFlattened(pArray : ARRAY_2UC) : ARRAY_1UC ; overload;

function createFlattened(pArray : ARRAY_3UC) : ARRAY_1UC ; overload;

function createFlattened(pArray : ARRAY_4UC) : ARRAY_1UC ; overload;

function createFlattened(pArray : ARRAY_5UC) : ARRAY_1UC ; overload;

function createFlattened(pArray : ARRAY_6UC) : ARRAY_1UC ; overload;

function createFlattened(pArray : ARRAY_7UC) : ARRAY_1UC ; overload;

function createFlattened(pArray : ARRAY_8UC) : ARRAY_1UC ; overload;

function createFlattened(pArray : ARRAY_9UC) : ARRAY_1UC ; overload;

function createFlattened(pArray : ARRAY_10UC) : ARRAY_1UC ; overload;

// createSlice methods
function createSlice(pArray : ARRAY_2UC; i1 : longint) : ARRAY_1UC ; overload;

function createSlice(pArray : ARRAY_3UC; i1 : longint) : ARRAY_2UC ; overload;

function createSlice(pArray : ARRAY_3UC; i1, i2 : longint) : ARRAY_1UC ; overload;

function createSlice(pArray : ARRAY_4UC; i1 : longint) : ARRAY_3UC ; overload;

function createSlice(pArray : ARRAY_4UC; i1, i2 : longint) : ARRAY_2UC ; overload;

function createSlice(pArray : ARRAY_4UC; i1, i2, i3 : longint) : ARRAY_1UC ; overload;

function createSlice(pArray : ARRAY_5UC; i1 : longint) : ARRAY_4UC ; overload;

function createSlice(pArray : ARRAY_5UC; i1, i2 : longint) : ARRAY_3UC ; overload;

function createSlice(pArray : ARRAY_5UC; i1, i2, i3 : longint) : ARRAY_2UC ; overload;

function createSlice(pArray : ARRAY_5UC; i1, i2, i3, i4 : longint) : ARRAY_1UC ; overload;

function createSlice(pArray : ARRAY_6UC; i1 : longint) : ARRAY_5UC ; overload;

function createSlice(pArray : ARRAY_6UC; i1, i2 : longint) : ARRAY_4UC ; overload;

function createSlice(pArray : ARRAY_6UC; i1, i2, i3 : longint) : ARRAY_3UC ; overload;

function createSlice(pArray : ARRAY_6UC; i1, i2, i3, i4 : longint) : ARRAY_2UC ; overload;

function createSlice(pArray : ARRAY_6UC; i1, i2, i3, i4, i5 : longint) : ARRAY_1UC ; overload;

function createSlice(pArray : ARRAY_7UC; i1 : longint) : ARRAY_6UC ; overload;

function createSlice(pArray : ARRAY_7UC; i1, i2 : longint) : ARRAY_5UC ; overload;

function createSlice(pArray : ARRAY_7UC; i1, i2, i3 : longint) : ARRAY_4UC ; overload;

function createSlice(pArray : ARRAY_7UC; i1, i2, i3, i4 : longint) : ARRAY_3UC ; overload;

function createSlice(pArray : ARRAY_7UC; i1, i2, i3, i4, i5 : longint) : ARRAY_2UC ; overload;

function createSlice(pArray : ARRAY_7UC; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_1UC ; overload;

function createSlice(pArray : ARRAY_8UC; i1 : longint) : ARRAY_7UC ; overload;

function createSlice(pArray : ARRAY_8UC; i1, i2 : longint) : ARRAY_6UC ; overload;

function createSlice(pArray : ARRAY_8UC; i1, i2, i3 : longint) : ARRAY_5UC ; overload;

function createSlice(pArray : ARRAY_8UC; i1, i2, i3, i4 : longint) : ARRAY_4UC ; overload;

function createSlice(pArray : ARRAY_8UC; i1, i2, i3, i4, i5 : longint) : ARRAY_3UC ; overload;

function createSlice(pArray : ARRAY_8UC; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_2UC ; overload;

function createSlice(pArray : ARRAY_8UC; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_1UC ; overload;

function createSlice(pArray : ARRAY_9UC; i1 : longint) : ARRAY_8UC ; overload;

function createSlice(pArray : ARRAY_9UC; i1, i2 : longint) : ARRAY_7UC ; overload;

function createSlice(pArray : ARRAY_9UC; i1, i2, i3 : longint) : ARRAY_6UC ; overload;

function createSlice(pArray : ARRAY_9UC; i1, i2, i3, i4 : longint) : ARRAY_5UC ; overload;

function createSlice(pArray : ARRAY_9UC; i1, i2, i3, i4, i5 : longint) : ARRAY_4UC ; overload;

function createSlice(pArray : ARRAY_9UC; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_3UC ; overload;

function createSlice(pArray : ARRAY_9UC; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_2UC ; overload;

function createSlice(pArray : ARRAY_9UC; i1, i2, i3, i4, i5, i6, i7, i8 : longint) : ARRAY_1UC ; overload;

function createSlice(pArray : ARRAY_10UC; i1 : longint) : ARRAY_9UC ; overload;

function createSlice(pArray : ARRAY_10UC; i1, i2 : longint) : ARRAY_8UC ; overload;

function createSlice(pArray : ARRAY_10UC; i1, i2, i3 : longint) : ARRAY_7UC ; overload;

function createSlice(pArray : ARRAY_10UC; i1, i2, i3, i4 : longint) : ARRAY_6UC ; overload;

function createSlice(pArray : ARRAY_10UC; i1, i2, i3, i4, i5 : longint) : ARRAY_5UC ; overload;

function createSlice(pArray : ARRAY_10UC; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_4UC ; overload;

function createSlice(pArray : ARRAY_10UC; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_3UC ; overload;

function createSlice(pArray : ARRAY_10UC; i1, i2, i3, i4, i5, i6, i7, i8 : longint) : ARRAY_2UC ; overload;

function createSlice(pArray : ARRAY_10UC; i1, i2, i3, i4, i5, i6, i7, i8, i9 : longint) : ARRAY_1UC ; overload;

// Stack size method
function stackSize(pArray : ARRAY_1UC) : longint ; overload;

// Stack creation method
function createStack(var pArray : ARRAY_1UC; nInitialSize : longint = DEFAULT_STACK_SIZE) : boolean ; overload;

// Stack growing method
procedure growStack(var pArray : ARRAY_1UC; nIndexNeeded : longint); overload;

// Simplified array creation methods
// 1D
function create(var pArray : ARRAY_1UC;
                nBaseIndex, nSize : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 2D
function create(var pArray : ARRAY_2UC;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 3D
function create(var pArray : ARRAY_3UC;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 4D
function create(var pArray : ARRAY_4UC;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 5D
function create(var pArray : ARRAY_5UC;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 6D
function create(var pArray : ARRAY_6UC;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 7D
function create(var pArray : ARRAY_7UC;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 8D
function create(var pArray : ARRAY_8UC;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 9D
function create(var pArray : ARRAY_9UC;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                nBaseIndex9, nSize9 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 10D
function create(var pArray : ARRAY_10UC;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                nBaseIndex9, nSize9 : longint;
                nBaseIndex10, nSize10 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// Bounds checking inline wrappers
procedure check1(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_1UC ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString) ; inline;

procedure check2(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_2UC ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString) ; inline;

procedure check3(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_3UC ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString) ; inline;

procedure check4(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_4UC ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString) ; inline;

procedure check5(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_5UC ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString) ; inline;

procedure check6(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_6UC ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString) ; inline;

procedure check7(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_7UC ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString) ; inline;

procedure check8(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_8UC ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString ;
                 ix8 : integer ;
                 n8 : AnsiString) ; inline;

procedure check9(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_9UC ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString ;
                 ix8 : integer ;
                 n8 : AnsiString ;
                 ix9 : integer ;
                 n9 : AnsiString) ; inline;

procedure check10(var pContext : AdtArrayPlanActor ;
                  pArray : ARRAY_10UC ;
                  sArrayName, sFileName, pFileLine : AnsiString ;
                  bThrowException : boolean ;
                  ix1 : integer ;
                  n1 : AnsiString ;
                  ix2 : integer ;
                  n2 : AnsiString ;
                  ix3 : integer ;
                  n3 : AnsiString ;
                  ix4 : integer ;
                  n4 : AnsiString ;
                  ix5 : integer ;
                  n5 : AnsiString ;
                  ix6 : integer ;
                  n6 : AnsiString ;
                  ix7 : integer ;
                  n7 : AnsiString ;
                  ix8 : integer ;
                  n8 : AnsiString ;
                  ix9 : integer ;
                  n9 : AnsiString ;
                  ix10 : integer ;
                  n10 : AnsiString) ; inline;
// flatten methods
function createFlattened(pArray : ARRAY_2I) : ARRAY_1I ; overload;

function createFlattened(pArray : ARRAY_3I) : ARRAY_1I ; overload;

function createFlattened(pArray : ARRAY_4I) : ARRAY_1I ; overload;

function createFlattened(pArray : ARRAY_5I) : ARRAY_1I ; overload;

function createFlattened(pArray : ARRAY_6I) : ARRAY_1I ; overload;

function createFlattened(pArray : ARRAY_7I) : ARRAY_1I ; overload;

function createFlattened(pArray : ARRAY_8I) : ARRAY_1I ; overload;

function createFlattened(pArray : ARRAY_9I) : ARRAY_1I ; overload;

function createFlattened(pArray : ARRAY_10I) : ARRAY_1I ; overload;

// createSlice methods
function createSlice(pArray : ARRAY_2I; i1 : longint) : ARRAY_1I ; overload;

function createSlice(pArray : ARRAY_3I; i1 : longint) : ARRAY_2I ; overload;

function createSlice(pArray : ARRAY_3I; i1, i2 : longint) : ARRAY_1I ; overload;

function createSlice(pArray : ARRAY_4I; i1 : longint) : ARRAY_3I ; overload;

function createSlice(pArray : ARRAY_4I; i1, i2 : longint) : ARRAY_2I ; overload;

function createSlice(pArray : ARRAY_4I; i1, i2, i3 : longint) : ARRAY_1I ; overload;

function createSlice(pArray : ARRAY_5I; i1 : longint) : ARRAY_4I ; overload;

function createSlice(pArray : ARRAY_5I; i1, i2 : longint) : ARRAY_3I ; overload;

function createSlice(pArray : ARRAY_5I; i1, i2, i3 : longint) : ARRAY_2I ; overload;

function createSlice(pArray : ARRAY_5I; i1, i2, i3, i4 : longint) : ARRAY_1I ; overload;

function createSlice(pArray : ARRAY_6I; i1 : longint) : ARRAY_5I ; overload;

function createSlice(pArray : ARRAY_6I; i1, i2 : longint) : ARRAY_4I ; overload;

function createSlice(pArray : ARRAY_6I; i1, i2, i3 : longint) : ARRAY_3I ; overload;

function createSlice(pArray : ARRAY_6I; i1, i2, i3, i4 : longint) : ARRAY_2I ; overload;

function createSlice(pArray : ARRAY_6I; i1, i2, i3, i4, i5 : longint) : ARRAY_1I ; overload;

function createSlice(pArray : ARRAY_7I; i1 : longint) : ARRAY_6I ; overload;

function createSlice(pArray : ARRAY_7I; i1, i2 : longint) : ARRAY_5I ; overload;

function createSlice(pArray : ARRAY_7I; i1, i2, i3 : longint) : ARRAY_4I ; overload;

function createSlice(pArray : ARRAY_7I; i1, i2, i3, i4 : longint) : ARRAY_3I ; overload;

function createSlice(pArray : ARRAY_7I; i1, i2, i3, i4, i5 : longint) : ARRAY_2I ; overload;

function createSlice(pArray : ARRAY_7I; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_1I ; overload;

function createSlice(pArray : ARRAY_8I; i1 : longint) : ARRAY_7I ; overload;

function createSlice(pArray : ARRAY_8I; i1, i2 : longint) : ARRAY_6I ; overload;

function createSlice(pArray : ARRAY_8I; i1, i2, i3 : longint) : ARRAY_5I ; overload;

function createSlice(pArray : ARRAY_8I; i1, i2, i3, i4 : longint) : ARRAY_4I ; overload;

function createSlice(pArray : ARRAY_8I; i1, i2, i3, i4, i5 : longint) : ARRAY_3I ; overload;

function createSlice(pArray : ARRAY_8I; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_2I ; overload;

function createSlice(pArray : ARRAY_8I; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_1I ; overload;

function createSlice(pArray : ARRAY_9I; i1 : longint) : ARRAY_8I ; overload;

function createSlice(pArray : ARRAY_9I; i1, i2 : longint) : ARRAY_7I ; overload;

function createSlice(pArray : ARRAY_9I; i1, i2, i3 : longint) : ARRAY_6I ; overload;

function createSlice(pArray : ARRAY_9I; i1, i2, i3, i4 : longint) : ARRAY_5I ; overload;

function createSlice(pArray : ARRAY_9I; i1, i2, i3, i4, i5 : longint) : ARRAY_4I ; overload;

function createSlice(pArray : ARRAY_9I; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_3I ; overload;

function createSlice(pArray : ARRAY_9I; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_2I ; overload;

function createSlice(pArray : ARRAY_9I; i1, i2, i3, i4, i5, i6, i7, i8 : longint) : ARRAY_1I ; overload;

function createSlice(pArray : ARRAY_10I; i1 : longint) : ARRAY_9I ; overload;

function createSlice(pArray : ARRAY_10I; i1, i2 : longint) : ARRAY_8I ; overload;

function createSlice(pArray : ARRAY_10I; i1, i2, i3 : longint) : ARRAY_7I ; overload;

function createSlice(pArray : ARRAY_10I; i1, i2, i3, i4 : longint) : ARRAY_6I ; overload;

function createSlice(pArray : ARRAY_10I; i1, i2, i3, i4, i5 : longint) : ARRAY_5I ; overload;

function createSlice(pArray : ARRAY_10I; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_4I ; overload;

function createSlice(pArray : ARRAY_10I; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_3I ; overload;

function createSlice(pArray : ARRAY_10I; i1, i2, i3, i4, i5, i6, i7, i8 : longint) : ARRAY_2I ; overload;

function createSlice(pArray : ARRAY_10I; i1, i2, i3, i4, i5, i6, i7, i8, i9 : longint) : ARRAY_1I ; overload;

// Stack size method
function stackSize(pArray : ARRAY_1I) : longint ; overload;

// Stack creation method
function createStack(var pArray : ARRAY_1I; nInitialSize : longint = DEFAULT_STACK_SIZE) : boolean ; overload;

// Stack growing method
procedure growStack(var pArray : ARRAY_1I; nIndexNeeded : longint); overload;

// Simplified array creation methods
// 1D
function create(var pArray : ARRAY_1I;
                nBaseIndex, nSize : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 2D
function create(var pArray : ARRAY_2I;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 3D
function create(var pArray : ARRAY_3I;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 4D
function create(var pArray : ARRAY_4I;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 5D
function create(var pArray : ARRAY_5I;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 6D
function create(var pArray : ARRAY_6I;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 7D
function create(var pArray : ARRAY_7I;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 8D
function create(var pArray : ARRAY_8I;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 9D
function create(var pArray : ARRAY_9I;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                nBaseIndex9, nSize9 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 10D
function create(var pArray : ARRAY_10I;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                nBaseIndex9, nSize9 : longint;
                nBaseIndex10, nSize10 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// Bounds checking inline wrappers
procedure check1(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_1I ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString) ; inline;

procedure check2(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_2I ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString) ; inline;

procedure check3(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_3I ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString) ; inline;

procedure check4(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_4I ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString) ; inline;

procedure check5(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_5I ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString) ; inline;

procedure check6(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_6I ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString) ; inline;

procedure check7(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_7I ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString) ; inline;

procedure check8(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_8I ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString ;
                 ix8 : integer ;
                 n8 : AnsiString) ; inline;

procedure check9(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_9I ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString ;
                 ix8 : integer ;
                 n8 : AnsiString ;
                 ix9 : integer ;
                 n9 : AnsiString) ; inline;

procedure check10(var pContext : AdtArrayPlanActor ;
                  pArray : ARRAY_10I ;
                  sArrayName, sFileName, pFileLine : AnsiString ;
                  bThrowException : boolean ;
                  ix1 : integer ;
                  n1 : AnsiString ;
                  ix2 : integer ;
                  n2 : AnsiString ;
                  ix3 : integer ;
                  n3 : AnsiString ;
                  ix4 : integer ;
                  n4 : AnsiString ;
                  ix5 : integer ;
                  n5 : AnsiString ;
                  ix6 : integer ;
                  n6 : AnsiString ;
                  ix7 : integer ;
                  n7 : AnsiString ;
                  ix8 : integer ;
                  n8 : AnsiString ;
                  ix9 : integer ;
                  n9 : AnsiString ;
                  ix10 : integer ;
                  n10 : AnsiString) ; inline;
// flatten methods
function createFlattened(pArray : ARRAY_2S) : ARRAY_1S ; overload;

function createFlattened(pArray : ARRAY_3S) : ARRAY_1S ; overload;

function createFlattened(pArray : ARRAY_4S) : ARRAY_1S ; overload;

function createFlattened(pArray : ARRAY_5S) : ARRAY_1S ; overload;

function createFlattened(pArray : ARRAY_6S) : ARRAY_1S ; overload;

function createFlattened(pArray : ARRAY_7S) : ARRAY_1S ; overload;

function createFlattened(pArray : ARRAY_8S) : ARRAY_1S ; overload;

function createFlattened(pArray : ARRAY_9S) : ARRAY_1S ; overload;

function createFlattened(pArray : ARRAY_10S) : ARRAY_1S ; overload;

// createSlice methods
function createSlice(pArray : ARRAY_2S; i1 : longint) : ARRAY_1S ; overload;

function createSlice(pArray : ARRAY_3S; i1 : longint) : ARRAY_2S ; overload;

function createSlice(pArray : ARRAY_3S; i1, i2 : longint) : ARRAY_1S ; overload;

function createSlice(pArray : ARRAY_4S; i1 : longint) : ARRAY_3S ; overload;

function createSlice(pArray : ARRAY_4S; i1, i2 : longint) : ARRAY_2S ; overload;

function createSlice(pArray : ARRAY_4S; i1, i2, i3 : longint) : ARRAY_1S ; overload;

function createSlice(pArray : ARRAY_5S; i1 : longint) : ARRAY_4S ; overload;

function createSlice(pArray : ARRAY_5S; i1, i2 : longint) : ARRAY_3S ; overload;

function createSlice(pArray : ARRAY_5S; i1, i2, i3 : longint) : ARRAY_2S ; overload;

function createSlice(pArray : ARRAY_5S; i1, i2, i3, i4 : longint) : ARRAY_1S ; overload;

function createSlice(pArray : ARRAY_6S; i1 : longint) : ARRAY_5S ; overload;

function createSlice(pArray : ARRAY_6S; i1, i2 : longint) : ARRAY_4S ; overload;

function createSlice(pArray : ARRAY_6S; i1, i2, i3 : longint) : ARRAY_3S ; overload;

function createSlice(pArray : ARRAY_6S; i1, i2, i3, i4 : longint) : ARRAY_2S ; overload;

function createSlice(pArray : ARRAY_6S; i1, i2, i3, i4, i5 : longint) : ARRAY_1S ; overload;

function createSlice(pArray : ARRAY_7S; i1 : longint) : ARRAY_6S ; overload;

function createSlice(pArray : ARRAY_7S; i1, i2 : longint) : ARRAY_5S ; overload;

function createSlice(pArray : ARRAY_7S; i1, i2, i3 : longint) : ARRAY_4S ; overload;

function createSlice(pArray : ARRAY_7S; i1, i2, i3, i4 : longint) : ARRAY_3S ; overload;

function createSlice(pArray : ARRAY_7S; i1, i2, i3, i4, i5 : longint) : ARRAY_2S ; overload;

function createSlice(pArray : ARRAY_7S; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_1S ; overload;

function createSlice(pArray : ARRAY_8S; i1 : longint) : ARRAY_7S ; overload;

function createSlice(pArray : ARRAY_8S; i1, i2 : longint) : ARRAY_6S ; overload;

function createSlice(pArray : ARRAY_8S; i1, i2, i3 : longint) : ARRAY_5S ; overload;

function createSlice(pArray : ARRAY_8S; i1, i2, i3, i4 : longint) : ARRAY_4S ; overload;

function createSlice(pArray : ARRAY_8S; i1, i2, i3, i4, i5 : longint) : ARRAY_3S ; overload;

function createSlice(pArray : ARRAY_8S; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_2S ; overload;

function createSlice(pArray : ARRAY_8S; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_1S ; overload;

function createSlice(pArray : ARRAY_9S; i1 : longint) : ARRAY_8S ; overload;

function createSlice(pArray : ARRAY_9S; i1, i2 : longint) : ARRAY_7S ; overload;

function createSlice(pArray : ARRAY_9S; i1, i2, i3 : longint) : ARRAY_6S ; overload;

function createSlice(pArray : ARRAY_9S; i1, i2, i3, i4 : longint) : ARRAY_5S ; overload;

function createSlice(pArray : ARRAY_9S; i1, i2, i3, i4, i5 : longint) : ARRAY_4S ; overload;

function createSlice(pArray : ARRAY_9S; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_3S ; overload;

function createSlice(pArray : ARRAY_9S; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_2S ; overload;

function createSlice(pArray : ARRAY_9S; i1, i2, i3, i4, i5, i6, i7, i8 : longint) : ARRAY_1S ; overload;

function createSlice(pArray : ARRAY_10S; i1 : longint) : ARRAY_9S ; overload;

function createSlice(pArray : ARRAY_10S; i1, i2 : longint) : ARRAY_8S ; overload;

function createSlice(pArray : ARRAY_10S; i1, i2, i3 : longint) : ARRAY_7S ; overload;

function createSlice(pArray : ARRAY_10S; i1, i2, i3, i4 : longint) : ARRAY_6S ; overload;

function createSlice(pArray : ARRAY_10S; i1, i2, i3, i4, i5 : longint) : ARRAY_5S ; overload;

function createSlice(pArray : ARRAY_10S; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_4S ; overload;

function createSlice(pArray : ARRAY_10S; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_3S ; overload;

function createSlice(pArray : ARRAY_10S; i1, i2, i3, i4, i5, i6, i7, i8 : longint) : ARRAY_2S ; overload;

function createSlice(pArray : ARRAY_10S; i1, i2, i3, i4, i5, i6, i7, i8, i9 : longint) : ARRAY_1S ; overload;

// Stack size method
function stackSize(pArray : ARRAY_1S) : longint ; overload;

// Stack creation method
function createStack(var pArray : ARRAY_1S; nInitialSize : longint = DEFAULT_STACK_SIZE) : boolean ; overload;

// Stack growing method
procedure growStack(var pArray : ARRAY_1S; nIndexNeeded : longint); overload;

// Simplified array creation methods
// 1D
function create(var pArray : ARRAY_1S;
                nBaseIndex, nSize : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 2D
function create(var pArray : ARRAY_2S;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 3D
function create(var pArray : ARRAY_3S;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 4D
function create(var pArray : ARRAY_4S;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 5D
function create(var pArray : ARRAY_5S;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 6D
function create(var pArray : ARRAY_6S;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 7D
function create(var pArray : ARRAY_7S;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 8D
function create(var pArray : ARRAY_8S;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 9D
function create(var pArray : ARRAY_9S;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                nBaseIndex9, nSize9 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 10D
function create(var pArray : ARRAY_10S;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                nBaseIndex9, nSize9 : longint;
                nBaseIndex10, nSize10 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// Bounds checking inline wrappers
procedure check1(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_1S ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString) ; inline;

procedure check2(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_2S ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString) ; inline;

procedure check3(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_3S ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString) ; inline;

procedure check4(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_4S ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString) ; inline;

procedure check5(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_5S ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString) ; inline;

procedure check6(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_6S ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString) ; inline;

procedure check7(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_7S ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString) ; inline;

procedure check8(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_8S ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString ;
                 ix8 : integer ;
                 n8 : AnsiString) ; inline;

procedure check9(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_9S ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString ;
                 ix8 : integer ;
                 n8 : AnsiString ;
                 ix9 : integer ;
                 n9 : AnsiString) ; inline;

procedure check10(var pContext : AdtArrayPlanActor ;
                  pArray : ARRAY_10S ;
                  sArrayName, sFileName, pFileLine : AnsiString ;
                  bThrowException : boolean ;
                  ix1 : integer ;
                  n1 : AnsiString ;
                  ix2 : integer ;
                  n2 : AnsiString ;
                  ix3 : integer ;
                  n3 : AnsiString ;
                  ix4 : integer ;
                  n4 : AnsiString ;
                  ix5 : integer ;
                  n5 : AnsiString ;
                  ix6 : integer ;
                  n6 : AnsiString ;
                  ix7 : integer ;
                  n7 : AnsiString ;
                  ix8 : integer ;
                  n8 : AnsiString ;
                  ix9 : integer ;
                  n9 : AnsiString ;
                  ix10 : integer ;
                  n10 : AnsiString) ; inline;
// flatten methods
function createFlattened(pArray : ARRAY_2US) : ARRAY_1US ; overload;

function createFlattened(pArray : ARRAY_3US) : ARRAY_1US ; overload;

function createFlattened(pArray : ARRAY_4US) : ARRAY_1US ; overload;

function createFlattened(pArray : ARRAY_5US) : ARRAY_1US ; overload;

function createFlattened(pArray : ARRAY_6US) : ARRAY_1US ; overload;

function createFlattened(pArray : ARRAY_7US) : ARRAY_1US ; overload;

function createFlattened(pArray : ARRAY_8US) : ARRAY_1US ; overload;

function createFlattened(pArray : ARRAY_9US) : ARRAY_1US ; overload;

function createFlattened(pArray : ARRAY_10US) : ARRAY_1US ; overload;

// createSlice methods
function createSlice(pArray : ARRAY_2US; i1 : longint) : ARRAY_1US ; overload;

function createSlice(pArray : ARRAY_3US; i1 : longint) : ARRAY_2US ; overload;

function createSlice(pArray : ARRAY_3US; i1, i2 : longint) : ARRAY_1US ; overload;

function createSlice(pArray : ARRAY_4US; i1 : longint) : ARRAY_3US ; overload;

function createSlice(pArray : ARRAY_4US; i1, i2 : longint) : ARRAY_2US ; overload;

function createSlice(pArray : ARRAY_4US; i1, i2, i3 : longint) : ARRAY_1US ; overload;

function createSlice(pArray : ARRAY_5US; i1 : longint) : ARRAY_4US ; overload;

function createSlice(pArray : ARRAY_5US; i1, i2 : longint) : ARRAY_3US ; overload;

function createSlice(pArray : ARRAY_5US; i1, i2, i3 : longint) : ARRAY_2US ; overload;

function createSlice(pArray : ARRAY_5US; i1, i2, i3, i4 : longint) : ARRAY_1US ; overload;

function createSlice(pArray : ARRAY_6US; i1 : longint) : ARRAY_5US ; overload;

function createSlice(pArray : ARRAY_6US; i1, i2 : longint) : ARRAY_4US ; overload;

function createSlice(pArray : ARRAY_6US; i1, i2, i3 : longint) : ARRAY_3US ; overload;

function createSlice(pArray : ARRAY_6US; i1, i2, i3, i4 : longint) : ARRAY_2US ; overload;

function createSlice(pArray : ARRAY_6US; i1, i2, i3, i4, i5 : longint) : ARRAY_1US ; overload;

function createSlice(pArray : ARRAY_7US; i1 : longint) : ARRAY_6US ; overload;

function createSlice(pArray : ARRAY_7US; i1, i2 : longint) : ARRAY_5US ; overload;

function createSlice(pArray : ARRAY_7US; i1, i2, i3 : longint) : ARRAY_4US ; overload;

function createSlice(pArray : ARRAY_7US; i1, i2, i3, i4 : longint) : ARRAY_3US ; overload;

function createSlice(pArray : ARRAY_7US; i1, i2, i3, i4, i5 : longint) : ARRAY_2US ; overload;

function createSlice(pArray : ARRAY_7US; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_1US ; overload;

function createSlice(pArray : ARRAY_8US; i1 : longint) : ARRAY_7US ; overload;

function createSlice(pArray : ARRAY_8US; i1, i2 : longint) : ARRAY_6US ; overload;

function createSlice(pArray : ARRAY_8US; i1, i2, i3 : longint) : ARRAY_5US ; overload;

function createSlice(pArray : ARRAY_8US; i1, i2, i3, i4 : longint) : ARRAY_4US ; overload;

function createSlice(pArray : ARRAY_8US; i1, i2, i3, i4, i5 : longint) : ARRAY_3US ; overload;

function createSlice(pArray : ARRAY_8US; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_2US ; overload;

function createSlice(pArray : ARRAY_8US; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_1US ; overload;

function createSlice(pArray : ARRAY_9US; i1 : longint) : ARRAY_8US ; overload;

function createSlice(pArray : ARRAY_9US; i1, i2 : longint) : ARRAY_7US ; overload;

function createSlice(pArray : ARRAY_9US; i1, i2, i3 : longint) : ARRAY_6US ; overload;

function createSlice(pArray : ARRAY_9US; i1, i2, i3, i4 : longint) : ARRAY_5US ; overload;

function createSlice(pArray : ARRAY_9US; i1, i2, i3, i4, i5 : longint) : ARRAY_4US ; overload;

function createSlice(pArray : ARRAY_9US; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_3US ; overload;

function createSlice(pArray : ARRAY_9US; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_2US ; overload;

function createSlice(pArray : ARRAY_9US; i1, i2, i3, i4, i5, i6, i7, i8 : longint) : ARRAY_1US ; overload;

function createSlice(pArray : ARRAY_10US; i1 : longint) : ARRAY_9US ; overload;

function createSlice(pArray : ARRAY_10US; i1, i2 : longint) : ARRAY_8US ; overload;

function createSlice(pArray : ARRAY_10US; i1, i2, i3 : longint) : ARRAY_7US ; overload;

function createSlice(pArray : ARRAY_10US; i1, i2, i3, i4 : longint) : ARRAY_6US ; overload;

function createSlice(pArray : ARRAY_10US; i1, i2, i3, i4, i5 : longint) : ARRAY_5US ; overload;

function createSlice(pArray : ARRAY_10US; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_4US ; overload;

function createSlice(pArray : ARRAY_10US; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_3US ; overload;

function createSlice(pArray : ARRAY_10US; i1, i2, i3, i4, i5, i6, i7, i8 : longint) : ARRAY_2US ; overload;

function createSlice(pArray : ARRAY_10US; i1, i2, i3, i4, i5, i6, i7, i8, i9 : longint) : ARRAY_1US ; overload;

// Stack size method
function stackSize(pArray : ARRAY_1US) : longint ; overload;

// Stack creation method
function createStack(var pArray : ARRAY_1US; nInitialSize : longint = DEFAULT_STACK_SIZE) : boolean ; overload;

// Stack growing method
procedure growStack(var pArray : ARRAY_1US; nIndexNeeded : longint); overload;

// Simplified array creation methods
// 1D
function create(var pArray : ARRAY_1US;
                nBaseIndex, nSize : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 2D
function create(var pArray : ARRAY_2US;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 3D
function create(var pArray : ARRAY_3US;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 4D
function create(var pArray : ARRAY_4US;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 5D
function create(var pArray : ARRAY_5US;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 6D
function create(var pArray : ARRAY_6US;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 7D
function create(var pArray : ARRAY_7US;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 8D
function create(var pArray : ARRAY_8US;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 9D
function create(var pArray : ARRAY_9US;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                nBaseIndex9, nSize9 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 10D
function create(var pArray : ARRAY_10US;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                nBaseIndex9, nSize9 : longint;
                nBaseIndex10, nSize10 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// Bounds checking inline wrappers
procedure check1(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_1US ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString) ; inline;

procedure check2(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_2US ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString) ; inline;

procedure check3(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_3US ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString) ; inline;

procedure check4(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_4US ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString) ; inline;

procedure check5(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_5US ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString) ; inline;

procedure check6(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_6US ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString) ; inline;

procedure check7(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_7US ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString) ; inline;

procedure check8(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_8US ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString ;
                 ix8 : integer ;
                 n8 : AnsiString) ; inline;

procedure check9(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_9US ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString ;
                 ix8 : integer ;
                 n8 : AnsiString ;
                 ix9 : integer ;
                 n9 : AnsiString) ; inline;

procedure check10(var pContext : AdtArrayPlanActor ;
                  pArray : ARRAY_10US ;
                  sArrayName, sFileName, pFileLine : AnsiString ;
                  bThrowException : boolean ;
                  ix1 : integer ;
                  n1 : AnsiString ;
                  ix2 : integer ;
                  n2 : AnsiString ;
                  ix3 : integer ;
                  n3 : AnsiString ;
                  ix4 : integer ;
                  n4 : AnsiString ;
                  ix5 : integer ;
                  n5 : AnsiString ;
                  ix6 : integer ;
                  n6 : AnsiString ;
                  ix7 : integer ;
                  n7 : AnsiString ;
                  ix8 : integer ;
                  n8 : AnsiString ;
                  ix9 : integer ;
                  n9 : AnsiString ;
                  ix10 : integer ;
                  n10 : AnsiString) ; inline;
// flatten methods
function createFlattened(pArray : ARRAY_2L) : ARRAY_1L ; overload;

function createFlattened(pArray : ARRAY_3L) : ARRAY_1L ; overload;

function createFlattened(pArray : ARRAY_4L) : ARRAY_1L ; overload;

function createFlattened(pArray : ARRAY_5L) : ARRAY_1L ; overload;

function createFlattened(pArray : ARRAY_6L) : ARRAY_1L ; overload;

function createFlattened(pArray : ARRAY_7L) : ARRAY_1L ; overload;

function createFlattened(pArray : ARRAY_8L) : ARRAY_1L ; overload;

function createFlattened(pArray : ARRAY_9L) : ARRAY_1L ; overload;

function createFlattened(pArray : ARRAY_10L) : ARRAY_1L ; overload;

// createSlice methods
function createSlice(pArray : ARRAY_2L; i1 : longint) : ARRAY_1L ; overload;

function createSlice(pArray : ARRAY_3L; i1 : longint) : ARRAY_2L ; overload;

function createSlice(pArray : ARRAY_3L; i1, i2 : longint) : ARRAY_1L ; overload;

function createSlice(pArray : ARRAY_4L; i1 : longint) : ARRAY_3L ; overload;

function createSlice(pArray : ARRAY_4L; i1, i2 : longint) : ARRAY_2L ; overload;

function createSlice(pArray : ARRAY_4L; i1, i2, i3 : longint) : ARRAY_1L ; overload;

function createSlice(pArray : ARRAY_5L; i1 : longint) : ARRAY_4L ; overload;

function createSlice(pArray : ARRAY_5L; i1, i2 : longint) : ARRAY_3L ; overload;

function createSlice(pArray : ARRAY_5L; i1, i2, i3 : longint) : ARRAY_2L ; overload;

function createSlice(pArray : ARRAY_5L; i1, i2, i3, i4 : longint) : ARRAY_1L ; overload;

function createSlice(pArray : ARRAY_6L; i1 : longint) : ARRAY_5L ; overload;

function createSlice(pArray : ARRAY_6L; i1, i2 : longint) : ARRAY_4L ; overload;

function createSlice(pArray : ARRAY_6L; i1, i2, i3 : longint) : ARRAY_3L ; overload;

function createSlice(pArray : ARRAY_6L; i1, i2, i3, i4 : longint) : ARRAY_2L ; overload;

function createSlice(pArray : ARRAY_6L; i1, i2, i3, i4, i5 : longint) : ARRAY_1L ; overload;

function createSlice(pArray : ARRAY_7L; i1 : longint) : ARRAY_6L ; overload;

function createSlice(pArray : ARRAY_7L; i1, i2 : longint) : ARRAY_5L ; overload;

function createSlice(pArray : ARRAY_7L; i1, i2, i3 : longint) : ARRAY_4L ; overload;

function createSlice(pArray : ARRAY_7L; i1, i2, i3, i4 : longint) : ARRAY_3L ; overload;

function createSlice(pArray : ARRAY_7L; i1, i2, i3, i4, i5 : longint) : ARRAY_2L ; overload;

function createSlice(pArray : ARRAY_7L; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_1L ; overload;

function createSlice(pArray : ARRAY_8L; i1 : longint) : ARRAY_7L ; overload;

function createSlice(pArray : ARRAY_8L; i1, i2 : longint) : ARRAY_6L ; overload;

function createSlice(pArray : ARRAY_8L; i1, i2, i3 : longint) : ARRAY_5L ; overload;

function createSlice(pArray : ARRAY_8L; i1, i2, i3, i4 : longint) : ARRAY_4L ; overload;

function createSlice(pArray : ARRAY_8L; i1, i2, i3, i4, i5 : longint) : ARRAY_3L ; overload;

function createSlice(pArray : ARRAY_8L; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_2L ; overload;

function createSlice(pArray : ARRAY_8L; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_1L ; overload;

function createSlice(pArray : ARRAY_9L; i1 : longint) : ARRAY_8L ; overload;

function createSlice(pArray : ARRAY_9L; i1, i2 : longint) : ARRAY_7L ; overload;

function createSlice(pArray : ARRAY_9L; i1, i2, i3 : longint) : ARRAY_6L ; overload;

function createSlice(pArray : ARRAY_9L; i1, i2, i3, i4 : longint) : ARRAY_5L ; overload;

function createSlice(pArray : ARRAY_9L; i1, i2, i3, i4, i5 : longint) : ARRAY_4L ; overload;

function createSlice(pArray : ARRAY_9L; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_3L ; overload;

function createSlice(pArray : ARRAY_9L; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_2L ; overload;

function createSlice(pArray : ARRAY_9L; i1, i2, i3, i4, i5, i6, i7, i8 : longint) : ARRAY_1L ; overload;

function createSlice(pArray : ARRAY_10L; i1 : longint) : ARRAY_9L ; overload;

function createSlice(pArray : ARRAY_10L; i1, i2 : longint) : ARRAY_8L ; overload;

function createSlice(pArray : ARRAY_10L; i1, i2, i3 : longint) : ARRAY_7L ; overload;

function createSlice(pArray : ARRAY_10L; i1, i2, i3, i4 : longint) : ARRAY_6L ; overload;

function createSlice(pArray : ARRAY_10L; i1, i2, i3, i4, i5 : longint) : ARRAY_5L ; overload;

function createSlice(pArray : ARRAY_10L; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_4L ; overload;

function createSlice(pArray : ARRAY_10L; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_3L ; overload;

function createSlice(pArray : ARRAY_10L; i1, i2, i3, i4, i5, i6, i7, i8 : longint) : ARRAY_2L ; overload;

function createSlice(pArray : ARRAY_10L; i1, i2, i3, i4, i5, i6, i7, i8, i9 : longint) : ARRAY_1L ; overload;

// Stack size method
function stackSize(pArray : ARRAY_1L) : longint ; overload;

// Stack creation method
function createStack(var pArray : ARRAY_1L; nInitialSize : longint = DEFAULT_STACK_SIZE) : boolean ; overload;

// Stack growing method
procedure growStack(var pArray : ARRAY_1L; nIndexNeeded : longint); overload;

// Simplified array creation methods
// 1D
function create(var pArray : ARRAY_1L;
                nBaseIndex, nSize : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 2D
function create(var pArray : ARRAY_2L;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 3D
function create(var pArray : ARRAY_3L;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 4D
function create(var pArray : ARRAY_4L;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 5D
function create(var pArray : ARRAY_5L;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 6D
function create(var pArray : ARRAY_6L;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 7D
function create(var pArray : ARRAY_7L;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 8D
function create(var pArray : ARRAY_8L;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 9D
function create(var pArray : ARRAY_9L;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                nBaseIndex9, nSize9 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 10D
function create(var pArray : ARRAY_10L;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                nBaseIndex9, nSize9 : longint;
                nBaseIndex10, nSize10 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// Bounds checking inline wrappers
procedure check1(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_1L ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString) ; inline;

procedure check2(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_2L ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString) ; inline;

procedure check3(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_3L ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString) ; inline;

procedure check4(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_4L ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString) ; inline;

procedure check5(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_5L ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString) ; inline;

procedure check6(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_6L ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString) ; inline;

procedure check7(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_7L ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString) ; inline;

procedure check8(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_8L ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString ;
                 ix8 : integer ;
                 n8 : AnsiString) ; inline;

procedure check9(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_9L ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString ;
                 ix8 : integer ;
                 n8 : AnsiString ;
                 ix9 : integer ;
                 n9 : AnsiString) ; inline;

procedure check10(var pContext : AdtArrayPlanActor ;
                  pArray : ARRAY_10L ;
                  sArrayName, sFileName, pFileLine : AnsiString ;
                  bThrowException : boolean ;
                  ix1 : integer ;
                  n1 : AnsiString ;
                  ix2 : integer ;
                  n2 : AnsiString ;
                  ix3 : integer ;
                  n3 : AnsiString ;
                  ix4 : integer ;
                  n4 : AnsiString ;
                  ix5 : integer ;
                  n5 : AnsiString ;
                  ix6 : integer ;
                  n6 : AnsiString ;
                  ix7 : integer ;
                  n7 : AnsiString ;
                  ix8 : integer ;
                  n8 : AnsiString ;
                  ix9 : integer ;
                  n9 : AnsiString ;
                  ix10 : integer ;
                  n10 : AnsiString) ; inline;
// flatten methods
function createFlattened(pArray : ARRAY_2UL) : ARRAY_1UL ; overload;

function createFlattened(pArray : ARRAY_3UL) : ARRAY_1UL ; overload;

function createFlattened(pArray : ARRAY_4UL) : ARRAY_1UL ; overload;

function createFlattened(pArray : ARRAY_5UL) : ARRAY_1UL ; overload;

function createFlattened(pArray : ARRAY_6UL) : ARRAY_1UL ; overload;

function createFlattened(pArray : ARRAY_7UL) : ARRAY_1UL ; overload;

function createFlattened(pArray : ARRAY_8UL) : ARRAY_1UL ; overload;

function createFlattened(pArray : ARRAY_9UL) : ARRAY_1UL ; overload;

function createFlattened(pArray : ARRAY_10UL) : ARRAY_1UL ; overload;

// createSlice methods
function createSlice(pArray : ARRAY_2UL; i1 : longint) : ARRAY_1UL ; overload;

function createSlice(pArray : ARRAY_3UL; i1 : longint) : ARRAY_2UL ; overload;

function createSlice(pArray : ARRAY_3UL; i1, i2 : longint) : ARRAY_1UL ; overload;

function createSlice(pArray : ARRAY_4UL; i1 : longint) : ARRAY_3UL ; overload;

function createSlice(pArray : ARRAY_4UL; i1, i2 : longint) : ARRAY_2UL ; overload;

function createSlice(pArray : ARRAY_4UL; i1, i2, i3 : longint) : ARRAY_1UL ; overload;

function createSlice(pArray : ARRAY_5UL; i1 : longint) : ARRAY_4UL ; overload;

function createSlice(pArray : ARRAY_5UL; i1, i2 : longint) : ARRAY_3UL ; overload;

function createSlice(pArray : ARRAY_5UL; i1, i2, i3 : longint) : ARRAY_2UL ; overload;

function createSlice(pArray : ARRAY_5UL; i1, i2, i3, i4 : longint) : ARRAY_1UL ; overload;

function createSlice(pArray : ARRAY_6UL; i1 : longint) : ARRAY_5UL ; overload;

function createSlice(pArray : ARRAY_6UL; i1, i2 : longint) : ARRAY_4UL ; overload;

function createSlice(pArray : ARRAY_6UL; i1, i2, i3 : longint) : ARRAY_3UL ; overload;

function createSlice(pArray : ARRAY_6UL; i1, i2, i3, i4 : longint) : ARRAY_2UL ; overload;

function createSlice(pArray : ARRAY_6UL; i1, i2, i3, i4, i5 : longint) : ARRAY_1UL ; overload;

function createSlice(pArray : ARRAY_7UL; i1 : longint) : ARRAY_6UL ; overload;

function createSlice(pArray : ARRAY_7UL; i1, i2 : longint) : ARRAY_5UL ; overload;

function createSlice(pArray : ARRAY_7UL; i1, i2, i3 : longint) : ARRAY_4UL ; overload;

function createSlice(pArray : ARRAY_7UL; i1, i2, i3, i4 : longint) : ARRAY_3UL ; overload;

function createSlice(pArray : ARRAY_7UL; i1, i2, i3, i4, i5 : longint) : ARRAY_2UL ; overload;

function createSlice(pArray : ARRAY_7UL; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_1UL ; overload;

function createSlice(pArray : ARRAY_8UL; i1 : longint) : ARRAY_7UL ; overload;

function createSlice(pArray : ARRAY_8UL; i1, i2 : longint) : ARRAY_6UL ; overload;

function createSlice(pArray : ARRAY_8UL; i1, i2, i3 : longint) : ARRAY_5UL ; overload;

function createSlice(pArray : ARRAY_8UL; i1, i2, i3, i4 : longint) : ARRAY_4UL ; overload;

function createSlice(pArray : ARRAY_8UL; i1, i2, i3, i4, i5 : longint) : ARRAY_3UL ; overload;

function createSlice(pArray : ARRAY_8UL; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_2UL ; overload;

function createSlice(pArray : ARRAY_8UL; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_1UL ; overload;

function createSlice(pArray : ARRAY_9UL; i1 : longint) : ARRAY_8UL ; overload;

function createSlice(pArray : ARRAY_9UL; i1, i2 : longint) : ARRAY_7UL ; overload;

function createSlice(pArray : ARRAY_9UL; i1, i2, i3 : longint) : ARRAY_6UL ; overload;

function createSlice(pArray : ARRAY_9UL; i1, i2, i3, i4 : longint) : ARRAY_5UL ; overload;

function createSlice(pArray : ARRAY_9UL; i1, i2, i3, i4, i5 : longint) : ARRAY_4UL ; overload;

function createSlice(pArray : ARRAY_9UL; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_3UL ; overload;

function createSlice(pArray : ARRAY_9UL; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_2UL ; overload;

function createSlice(pArray : ARRAY_9UL; i1, i2, i3, i4, i5, i6, i7, i8 : longint) : ARRAY_1UL ; overload;

function createSlice(pArray : ARRAY_10UL; i1 : longint) : ARRAY_9UL ; overload;

function createSlice(pArray : ARRAY_10UL; i1, i2 : longint) : ARRAY_8UL ; overload;

function createSlice(pArray : ARRAY_10UL; i1, i2, i3 : longint) : ARRAY_7UL ; overload;

function createSlice(pArray : ARRAY_10UL; i1, i2, i3, i4 : longint) : ARRAY_6UL ; overload;

function createSlice(pArray : ARRAY_10UL; i1, i2, i3, i4, i5 : longint) : ARRAY_5UL ; overload;

function createSlice(pArray : ARRAY_10UL; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_4UL ; overload;

function createSlice(pArray : ARRAY_10UL; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_3UL ; overload;

function createSlice(pArray : ARRAY_10UL; i1, i2, i3, i4, i5, i6, i7, i8 : longint) : ARRAY_2UL ; overload;

function createSlice(pArray : ARRAY_10UL; i1, i2, i3, i4, i5, i6, i7, i8, i9 : longint) : ARRAY_1UL ; overload;

// Stack size method
function stackSize(pArray : ARRAY_1UL) : longint ; overload;

// Stack creation method
function createStack(var pArray : ARRAY_1UL; nInitialSize : longint = DEFAULT_STACK_SIZE) : boolean ; overload;

// Stack growing method
procedure growStack(var pArray : ARRAY_1UL; nIndexNeeded : longint); overload;

// Simplified array creation methods
// 1D
function create(var pArray : ARRAY_1UL;
                nBaseIndex, nSize : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 2D
function create(var pArray : ARRAY_2UL;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 3D
function create(var pArray : ARRAY_3UL;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 4D
function create(var pArray : ARRAY_4UL;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 5D
function create(var pArray : ARRAY_5UL;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 6D
function create(var pArray : ARRAY_6UL;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 7D
function create(var pArray : ARRAY_7UL;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 8D
function create(var pArray : ARRAY_8UL;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 9D
function create(var pArray : ARRAY_9UL;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                nBaseIndex9, nSize9 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 10D
function create(var pArray : ARRAY_10UL;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                nBaseIndex9, nSize9 : longint;
                nBaseIndex10, nSize10 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// Bounds checking inline wrappers
procedure check1(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_1UL ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString) ; inline;

procedure check2(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_2UL ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString) ; inline;

procedure check3(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_3UL ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString) ; inline;

procedure check4(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_4UL ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString) ; inline;

procedure check5(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_5UL ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString) ; inline;

procedure check6(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_6UL ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString) ; inline;

procedure check7(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_7UL ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString) ; inline;

procedure check8(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_8UL ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString ;
                 ix8 : integer ;
                 n8 : AnsiString) ; inline;

procedure check9(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_9UL ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString ;
                 ix8 : integer ;
                 n8 : AnsiString ;
                 ix9 : integer ;
                 n9 : AnsiString) ; inline;

procedure check10(var pContext : AdtArrayPlanActor ;
                  pArray : ARRAY_10UL ;
                  sArrayName, sFileName, pFileLine : AnsiString ;
                  bThrowException : boolean ;
                  ix1 : integer ;
                  n1 : AnsiString ;
                  ix2 : integer ;
                  n2 : AnsiString ;
                  ix3 : integer ;
                  n3 : AnsiString ;
                  ix4 : integer ;
                  n4 : AnsiString ;
                  ix5 : integer ;
                  n5 : AnsiString ;
                  ix6 : integer ;
                  n6 : AnsiString ;
                  ix7 : integer ;
                  n7 : AnsiString ;
                  ix8 : integer ;
                  n8 : AnsiString ;
                  ix9 : integer ;
                  n9 : AnsiString ;
                  ix10 : integer ;
                  n10 : AnsiString) ; inline;
// flatten methods
function createFlattened(pArray : ARRAY_2F) : ARRAY_1F ; overload;

function createFlattened(pArray : ARRAY_3F) : ARRAY_1F ; overload;

function createFlattened(pArray : ARRAY_4F) : ARRAY_1F ; overload;

function createFlattened(pArray : ARRAY_5F) : ARRAY_1F ; overload;

function createFlattened(pArray : ARRAY_6F) : ARRAY_1F ; overload;

function createFlattened(pArray : ARRAY_7F) : ARRAY_1F ; overload;

function createFlattened(pArray : ARRAY_8F) : ARRAY_1F ; overload;

function createFlattened(pArray : ARRAY_9F) : ARRAY_1F ; overload;

function createFlattened(pArray : ARRAY_10F) : ARRAY_1F ; overload;

// createSlice methods
function createSlice(pArray : ARRAY_2F; i1 : longint) : ARRAY_1F ; overload;

function createSlice(pArray : ARRAY_3F; i1 : longint) : ARRAY_2F ; overload;

function createSlice(pArray : ARRAY_3F; i1, i2 : longint) : ARRAY_1F ; overload;

function createSlice(pArray : ARRAY_4F; i1 : longint) : ARRAY_3F ; overload;

function createSlice(pArray : ARRAY_4F; i1, i2 : longint) : ARRAY_2F ; overload;

function createSlice(pArray : ARRAY_4F; i1, i2, i3 : longint) : ARRAY_1F ; overload;

function createSlice(pArray : ARRAY_5F; i1 : longint) : ARRAY_4F ; overload;

function createSlice(pArray : ARRAY_5F; i1, i2 : longint) : ARRAY_3F ; overload;

function createSlice(pArray : ARRAY_5F; i1, i2, i3 : longint) : ARRAY_2F ; overload;

function createSlice(pArray : ARRAY_5F; i1, i2, i3, i4 : longint) : ARRAY_1F ; overload;

function createSlice(pArray : ARRAY_6F; i1 : longint) : ARRAY_5F ; overload;

function createSlice(pArray : ARRAY_6F; i1, i2 : longint) : ARRAY_4F ; overload;

function createSlice(pArray : ARRAY_6F; i1, i2, i3 : longint) : ARRAY_3F ; overload;

function createSlice(pArray : ARRAY_6F; i1, i2, i3, i4 : longint) : ARRAY_2F ; overload;

function createSlice(pArray : ARRAY_6F; i1, i2, i3, i4, i5 : longint) : ARRAY_1F ; overload;

function createSlice(pArray : ARRAY_7F; i1 : longint) : ARRAY_6F ; overload;

function createSlice(pArray : ARRAY_7F; i1, i2 : longint) : ARRAY_5F ; overload;

function createSlice(pArray : ARRAY_7F; i1, i2, i3 : longint) : ARRAY_4F ; overload;

function createSlice(pArray : ARRAY_7F; i1, i2, i3, i4 : longint) : ARRAY_3F ; overload;

function createSlice(pArray : ARRAY_7F; i1, i2, i3, i4, i5 : longint) : ARRAY_2F ; overload;

function createSlice(pArray : ARRAY_7F; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_1F ; overload;

function createSlice(pArray : ARRAY_8F; i1 : longint) : ARRAY_7F ; overload;

function createSlice(pArray : ARRAY_8F; i1, i2 : longint) : ARRAY_6F ; overload;

function createSlice(pArray : ARRAY_8F; i1, i2, i3 : longint) : ARRAY_5F ; overload;

function createSlice(pArray : ARRAY_8F; i1, i2, i3, i4 : longint) : ARRAY_4F ; overload;

function createSlice(pArray : ARRAY_8F; i1, i2, i3, i4, i5 : longint) : ARRAY_3F ; overload;

function createSlice(pArray : ARRAY_8F; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_2F ; overload;

function createSlice(pArray : ARRAY_8F; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_1F ; overload;

function createSlice(pArray : ARRAY_9F; i1 : longint) : ARRAY_8F ; overload;

function createSlice(pArray : ARRAY_9F; i1, i2 : longint) : ARRAY_7F ; overload;

function createSlice(pArray : ARRAY_9F; i1, i2, i3 : longint) : ARRAY_6F ; overload;

function createSlice(pArray : ARRAY_9F; i1, i2, i3, i4 : longint) : ARRAY_5F ; overload;

function createSlice(pArray : ARRAY_9F; i1, i2, i3, i4, i5 : longint) : ARRAY_4F ; overload;

function createSlice(pArray : ARRAY_9F; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_3F ; overload;

function createSlice(pArray : ARRAY_9F; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_2F ; overload;

function createSlice(pArray : ARRAY_9F; i1, i2, i3, i4, i5, i6, i7, i8 : longint) : ARRAY_1F ; overload;

function createSlice(pArray : ARRAY_10F; i1 : longint) : ARRAY_9F ; overload;

function createSlice(pArray : ARRAY_10F; i1, i2 : longint) : ARRAY_8F ; overload;

function createSlice(pArray : ARRAY_10F; i1, i2, i3 : longint) : ARRAY_7F ; overload;

function createSlice(pArray : ARRAY_10F; i1, i2, i3, i4 : longint) : ARRAY_6F ; overload;

function createSlice(pArray : ARRAY_10F; i1, i2, i3, i4, i5 : longint) : ARRAY_5F ; overload;

function createSlice(pArray : ARRAY_10F; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_4F ; overload;

function createSlice(pArray : ARRAY_10F; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_3F ; overload;

function createSlice(pArray : ARRAY_10F; i1, i2, i3, i4, i5, i6, i7, i8 : longint) : ARRAY_2F ; overload;

function createSlice(pArray : ARRAY_10F; i1, i2, i3, i4, i5, i6, i7, i8, i9 : longint) : ARRAY_1F ; overload;

// Stack size method
function stackSize(pArray : ARRAY_1F) : longint ; overload;

// Stack creation method
function createStack(var pArray : ARRAY_1F; nInitialSize : longint = DEFAULT_STACK_SIZE) : boolean ; overload;

// Stack growing method
procedure growStack(var pArray : ARRAY_1F; nIndexNeeded : longint); overload;

// Simplified array creation methods
// 1D
function create(var pArray : ARRAY_1F;
                nBaseIndex, nSize : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 2D
function create(var pArray : ARRAY_2F;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 3D
function create(var pArray : ARRAY_3F;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 4D
function create(var pArray : ARRAY_4F;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 5D
function create(var pArray : ARRAY_5F;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 6D
function create(var pArray : ARRAY_6F;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 7D
function create(var pArray : ARRAY_7F;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 8D
function create(var pArray : ARRAY_8F;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 9D
function create(var pArray : ARRAY_9F;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                nBaseIndex9, nSize9 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 10D
function create(var pArray : ARRAY_10F;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                nBaseIndex9, nSize9 : longint;
                nBaseIndex10, nSize10 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// Bounds checking inline wrappers
procedure check1(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_1F ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString) ; inline;

procedure check2(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_2F ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString) ; inline;

procedure check3(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_3F ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString) ; inline;

procedure check4(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_4F ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString) ; inline;

procedure check5(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_5F ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString) ; inline;

procedure check6(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_6F ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString) ; inline;

procedure check7(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_7F ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString) ; inline;

procedure check8(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_8F ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString ;
                 ix8 : integer ;
                 n8 : AnsiString) ; inline;

procedure check9(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_9F ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString ;
                 ix8 : integer ;
                 n8 : AnsiString ;
                 ix9 : integer ;
                 n9 : AnsiString) ; inline;

procedure check10(var pContext : AdtArrayPlanActor ;
                  pArray : ARRAY_10F ;
                  sArrayName, sFileName, pFileLine : AnsiString ;
                  bThrowException : boolean ;
                  ix1 : integer ;
                  n1 : AnsiString ;
                  ix2 : integer ;
                  n2 : AnsiString ;
                  ix3 : integer ;
                  n3 : AnsiString ;
                  ix4 : integer ;
                  n4 : AnsiString ;
                  ix5 : integer ;
                  n5 : AnsiString ;
                  ix6 : integer ;
                  n6 : AnsiString ;
                  ix7 : integer ;
                  n7 : AnsiString ;
                  ix8 : integer ;
                  n8 : AnsiString ;
                  ix9 : integer ;
                  n9 : AnsiString ;
                  ix10 : integer ;
                  n10 : AnsiString) ; inline;
// flatten methods
function createFlattened(pArray : ARRAY_2D) : ARRAY_1D ; overload;

function createFlattened(pArray : ARRAY_3D) : ARRAY_1D ; overload;

function createFlattened(pArray : ARRAY_4D) : ARRAY_1D ; overload;

function createFlattened(pArray : ARRAY_5D) : ARRAY_1D ; overload;

function createFlattened(pArray : ARRAY_6D) : ARRAY_1D ; overload;

function createFlattened(pArray : ARRAY_7D) : ARRAY_1D ; overload;

function createFlattened(pArray : ARRAY_8D) : ARRAY_1D ; overload;

function createFlattened(pArray : ARRAY_9D) : ARRAY_1D ; overload;

function createFlattened(pArray : ARRAY_10D) : ARRAY_1D ; overload;

// createSlice methods
function createSlice(pArray : ARRAY_2D; i1 : longint) : ARRAY_1D ; overload;

function createSlice(pArray : ARRAY_3D; i1 : longint) : ARRAY_2D ; overload;

function createSlice(pArray : ARRAY_3D; i1, i2 : longint) : ARRAY_1D ; overload;

function createSlice(pArray : ARRAY_4D; i1 : longint) : ARRAY_3D ; overload;

function createSlice(pArray : ARRAY_4D; i1, i2 : longint) : ARRAY_2D ; overload;

function createSlice(pArray : ARRAY_4D; i1, i2, i3 : longint) : ARRAY_1D ; overload;

function createSlice(pArray : ARRAY_5D; i1 : longint) : ARRAY_4D ; overload;

function createSlice(pArray : ARRAY_5D; i1, i2 : longint) : ARRAY_3D ; overload;

function createSlice(pArray : ARRAY_5D; i1, i2, i3 : longint) : ARRAY_2D ; overload;

function createSlice(pArray : ARRAY_5D; i1, i2, i3, i4 : longint) : ARRAY_1D ; overload;

function createSlice(pArray : ARRAY_6D; i1 : longint) : ARRAY_5D ; overload;

function createSlice(pArray : ARRAY_6D; i1, i2 : longint) : ARRAY_4D ; overload;

function createSlice(pArray : ARRAY_6D; i1, i2, i3 : longint) : ARRAY_3D ; overload;

function createSlice(pArray : ARRAY_6D; i1, i2, i3, i4 : longint) : ARRAY_2D ; overload;

function createSlice(pArray : ARRAY_6D; i1, i2, i3, i4, i5 : longint) : ARRAY_1D ; overload;

function createSlice(pArray : ARRAY_7D; i1 : longint) : ARRAY_6D ; overload;

function createSlice(pArray : ARRAY_7D; i1, i2 : longint) : ARRAY_5D ; overload;

function createSlice(pArray : ARRAY_7D; i1, i2, i3 : longint) : ARRAY_4D ; overload;

function createSlice(pArray : ARRAY_7D; i1, i2, i3, i4 : longint) : ARRAY_3D ; overload;

function createSlice(pArray : ARRAY_7D; i1, i2, i3, i4, i5 : longint) : ARRAY_2D ; overload;

function createSlice(pArray : ARRAY_7D; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_1D ; overload;

function createSlice(pArray : ARRAY_8D; i1 : longint) : ARRAY_7D ; overload;

function createSlice(pArray : ARRAY_8D; i1, i2 : longint) : ARRAY_6D ; overload;

function createSlice(pArray : ARRAY_8D; i1, i2, i3 : longint) : ARRAY_5D ; overload;

function createSlice(pArray : ARRAY_8D; i1, i2, i3, i4 : longint) : ARRAY_4D ; overload;

function createSlice(pArray : ARRAY_8D; i1, i2, i3, i4, i5 : longint) : ARRAY_3D ; overload;

function createSlice(pArray : ARRAY_8D; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_2D ; overload;

function createSlice(pArray : ARRAY_8D; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_1D ; overload;

function createSlice(pArray : ARRAY_9D; i1 : longint) : ARRAY_8D ; overload;

function createSlice(pArray : ARRAY_9D; i1, i2 : longint) : ARRAY_7D ; overload;

function createSlice(pArray : ARRAY_9D; i1, i2, i3 : longint) : ARRAY_6D ; overload;

function createSlice(pArray : ARRAY_9D; i1, i2, i3, i4 : longint) : ARRAY_5D ; overload;

function createSlice(pArray : ARRAY_9D; i1, i2, i3, i4, i5 : longint) : ARRAY_4D ; overload;

function createSlice(pArray : ARRAY_9D; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_3D ; overload;

function createSlice(pArray : ARRAY_9D; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_2D ; overload;

function createSlice(pArray : ARRAY_9D; i1, i2, i3, i4, i5, i6, i7, i8 : longint) : ARRAY_1D ; overload;

function createSlice(pArray : ARRAY_10D; i1 : longint) : ARRAY_9D ; overload;

function createSlice(pArray : ARRAY_10D; i1, i2 : longint) : ARRAY_8D ; overload;

function createSlice(pArray : ARRAY_10D; i1, i2, i3 : longint) : ARRAY_7D ; overload;

function createSlice(pArray : ARRAY_10D; i1, i2, i3, i4 : longint) : ARRAY_6D ; overload;

function createSlice(pArray : ARRAY_10D; i1, i2, i3, i4, i5 : longint) : ARRAY_5D ; overload;

function createSlice(pArray : ARRAY_10D; i1, i2, i3, i4, i5, i6 : longint) : ARRAY_4D ; overload;

function createSlice(pArray : ARRAY_10D; i1, i2, i3, i4, i5, i6, i7 : longint) : ARRAY_3D ; overload;

function createSlice(pArray : ARRAY_10D; i1, i2, i3, i4, i5, i6, i7, i8 : longint) : ARRAY_2D ; overload;

function createSlice(pArray : ARRAY_10D; i1, i2, i3, i4, i5, i6, i7, i8, i9 : longint) : ARRAY_1D ; overload;

// Stack size method
function stackSize(pArray : ARRAY_1D) : longint ; overload;

// Stack creation method
function createStack(var pArray : ARRAY_1D; nInitialSize : longint = DEFAULT_STACK_SIZE) : boolean ; overload;

// Stack growing method
procedure growStack(var pArray : ARRAY_1D; nIndexNeeded : longint); overload;

// Simplified array creation methods
// 1D
function create(var pArray : ARRAY_1D;
                nBaseIndex, nSize : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 2D
function create(var pArray : ARRAY_2D;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 3D
function create(var pArray : ARRAY_3D;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 4D
function create(var pArray : ARRAY_4D;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 5D
function create(var pArray : ARRAY_5D;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 6D
function create(var pArray : ARRAY_6D;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 7D
function create(var pArray : ARRAY_7D;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 8D
function create(var pArray : ARRAY_8D;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 9D
function create(var pArray : ARRAY_9D;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                nBaseIndex9, nSize9 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// 10D
function create(var pArray : ARRAY_10D;
                nBaseIndex1, nSize1 : longint;
                nBaseIndex2, nSize2 : longint;
                nBaseIndex3, nSize3 : longint;
                nBaseIndex4, nSize4 : longint;
                nBaseIndex5, nSize5 : longint;
                nBaseIndex6, nSize6 : longint;
                nBaseIndex7, nSize7 : longint;
                nBaseIndex8, nSize8 : longint;
                nBaseIndex9, nSize9 : longint;
                nBaseIndex10, nSize10 : longint;
                pExisting : pchar = nil) : boolean ; overload;

// Bounds checking inline wrappers
procedure check1(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_1D ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString) ; inline;

procedure check2(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_2D ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString) ; inline;

procedure check3(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_3D ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString) ; inline;

procedure check4(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_4D ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString) ; inline;

procedure check5(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_5D ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString) ; inline;

procedure check6(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_6D ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString) ; inline;

procedure check7(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_7D ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString) ; inline;

procedure check8(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_8D ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString ;
                 ix8 : integer ;
                 n8 : AnsiString) ; inline;

procedure check9(var pContext : AdtArrayPlanActor ;
                 pArray : ARRAY_9D ;
                 sArrayName, sFileName, pFileLine : AnsiString ;
                 bThrowException : boolean ;
                 ix1 : integer ;
                 n1 : AnsiString ;
                 ix2 : integer ;
                 n2 : AnsiString ;
                 ix3 : integer ;
                 n3 : AnsiString ;
                 ix4 : integer ;
                 n4 : AnsiString ;
                 ix5 : integer ;
                 n5 : AnsiString ;
                 ix6 : integer ;
                 n6 : AnsiString ;
                 ix7 : integer ;
                 n7 : AnsiString ;
                 ix8 : integer ;
                 n8 : AnsiString ;
                 ix9 : integer ;
                 n9 : AnsiString) ; inline;

procedure check10(var pContext : AdtArrayPlanActor ;
                  pArray : ARRAY_10D ;
                  sArrayName, sFileName, pFileLine : AnsiString ;
                  bThrowException : boolean ;
                  ix1 : integer ;
                  n1 : AnsiString ;
                  ix2 : integer ;
                  n2 : AnsiString ;
                  ix3 : integer ;
                  n3 : AnsiString ;
                  ix4 : integer ;
                  n4 : AnsiString ;
                  ix5 : integer ;
                  n5 : AnsiString ;
                  ix6 : integer ;
                  n6 : AnsiString ;
                  ix7 : integer ;
                  n7 : AnsiString ;
                  ix8 : integer ;
                  n8 : AnsiString ;
                  ix9 : integer ;
                  n9 : AnsiString ;
                  ix10 : integer ;
                  n10 : AnsiString) ; inline;
